<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FrozenMap</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 04 Dec 2016 21:25:56 +0800</pubDate>
    <lastBuildDate>Sun, 04 Dec 2016 21:25:56 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>翻译：Join the latest round of Google Code-in</title>
        <description>&lt;p&gt;这是&lt;strong&gt;翻译&lt;/strong&gt;系列的一篇文章。原文来自Google Blog的&lt;a href=&quot;https://blog.google/topics/education/calling-all-teens-join-latest-round-google-code-/&quot;&gt;Calling all teens: join the latest round of Google Code-in&lt;/a&gt;，发布于2016年11月29日。以下是译文。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://storage.googleapis.com/gweb-uniblog-publish-prod/images/GCI_student_pic.2e16d0ba.fill-2000x1126.jpg&quot; alt=&quot;GCI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;google-code-in&quot;&gt;少年，来参加最新一届Google Code-in大赛吧！&lt;/h2&gt;

&lt;p&gt;昨天(2016.11.28)，第七届&lt;a href=&quot;https://developers.google.com/open-source/gci/&quot;&gt;Google Code-in&lt;/a&gt;(GCI)正式开始。GCI一年举办一次，其目的是鼓励学生加入开源项目的发展。GCI面向全球的13-17岁的学生，并且完全通过网上进行。&lt;/p&gt;

&lt;p&gt;现在这个时代，开源软件组成了互联网的基础。不管是服务器、路由器，还是你口袋里的手机，都与开源软件息息相关。而这些也是开源社区努力推动的结果。GCI的举办，不仅是为了更好地鼓励年轻开发者，同时也是在为开源社区增添新的活力。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/jjfD_NPykRT-4LQjUT14IInO-BCOy1WRkuPlfENBvf73-tbeU_fPJtkVRdZMap-o8lEvfd2NhTsYKVq-e0HlIISb5EUc_L_el_bKKCGfRQxQBDqWRlqpnl53As0A0EQn_it3QuRc&quot; alt=&quot;GCI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;比赛很简单，同学们只需要完成许多小任务(bite-sized tasks)就可以了。这些任务由17个开源组织设计，主题包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;编码&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;文档撰写/培训&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;探索/研究&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;质量保证&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用户界面&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些任务平均要花3-5小时完成，其中会有导师参与指导。每完成一个任务，你就能获得一个数字证书。如果完成了三个任务，就能得到一件谷歌的T恤。每个组织的导师会选出10位为其贡献最多的同学，他们将各自获得一件连帽衫，而最终的大奖获得者将有机会去参观谷歌在加州的总部。在那儿，他们可以和谷歌工程师、导师以及其他获奖者会面与交流。&lt;/p&gt;

&lt;p&gt;第一届GCI共有来自45个国家的361位同学参赛。而到了2015年，已经有来自65个国家的980位同学的共同参与。以往参赛者的经历可以在&lt;a href=&quot;http://opensource.googleblog.com/2016/11/stories-from-google-code-in-2015.html&quot;&gt;谷歌开源博客&lt;/a&gt;上找到。在过去的六年中，来自99个国家的超过3000位同学完成了GCI的比赛任务。&lt;/p&gt;

&lt;p&gt;曾经的参赛者&lt;a href=&quot;https://opensource.googleblog.com/2016/11/stories-from-google-code-in-2015.html&quot;&gt;Ahmed Sabie&lt;/a&gt;说过：“总体来说，Google Code-in是人生中的一次体验。这次参赛经历帮助我点亮了一些软件开发中关键的技能点，明确了我未来的发展方向。”&lt;/p&gt;

&lt;p&gt;如果你认识一些对GCI感兴趣的同学，欢迎介绍他们来参赛~如果想要了解更多GCI的相关信息，可以点击查看&lt;a href=&quot;https://developers.google.com/open-source/gci/resources/contest-rules&quot;&gt;详细规则&lt;/a&gt;和&lt;a href=&quot;https://developers.google.com/open-source/gci/faq&quot;&gt;问答区&lt;/a&gt;，也可以在我们的&lt;a href=&quot;https://g.co/gci&quot;&gt;比赛主页&lt;/a&gt;上查看&lt;a href=&quot;https://developers.google.com/open-source/gci/resources/getting-started&quot;&gt;参赛指南&lt;/a&gt;。如果你是一位老师，请点击获取&lt;a href=&quot;https://developers.google.com/open-source/gci/resources/media&quot;&gt;更多相关资料&lt;/a&gt;，以便你的学生能够更好地参与比赛。&lt;/p&gt;

&lt;p&gt;本文发布于&lt;a href=&quot;https://blog.google/topics/education/&quot;&gt;教育专区&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section&quot;&gt;相关阅读&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Google_Code-in&quot;&gt;Wikipedia: Google Code-in&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 02 Dec 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/12/02/Google_Code-in.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/02/Google_Code-in.html</guid>
        
        
      </item>
    
      <item>
        <title>翻译：GitHub is headed to AWS re:Invent</title>
        <description>&lt;p&gt;这是&lt;strong&gt;翻译&lt;/strong&gt;系列的一篇文章。原文来自 &lt;a href=&quot;https://github.com/blog/2281-github-is-headed-to-aws-re-invent&quot;&gt;GitHub is headed to AWS re:Invent&lt;/a&gt;，发布于2016年11月11日。以下是译文。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/16549281/20196199/7d40e506-a74e-11e6-83ef-bc79a5cd92d2.jpg&quot; alt=&quot;GitHub at AWS re:Invent&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GitHub团队已经为11月28日举行的亚马逊的AWS re:Invent大会做好了准备。届时，我们也期待与你相遇。&lt;/p&gt;

&lt;p&gt;(注: 亚马逊的Amazon Web Services是目前最大的公有云服务，而re:Invent是一个类似&lt;code class=&quot;highlighter-rouge&quot;&gt;WWDC&lt;/code&gt;，或者&lt;code class=&quot;highlighter-rouge&quot;&gt;Google I/O&lt;/code&gt;的发布会)&lt;/p&gt;

&lt;p&gt;GitHub和AWS一起，可以使代码的生产与提交更加快速与安全。而这个平台也可以更好地融入已有的工作流程，节省时间，因为你的团队可以使用自己熟悉的各种工具。在AWS re:Invent大会上，我们会进行为期一周的展示，以便大家更好地了解GitHub和AWS是如何共同工作的。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;devops&quot;&gt;升级你的DevOps程序&lt;/h2&gt;

&lt;p&gt;DevOps是一个无底的坑(误)，有好的工具只是一个开端。来自Accenture Federal Service的Natalie Bradley和来自GitHub的Matthew McCullough会介绍GitHub企业版如何与AWS一起，形成DevOps程序的坚实后盾。它们的存在，不仅提升了代码质量和传输速率，也定义了如何衡量一个大众工具的好坏。更多内容可以查看&lt;a href=&quot;https://www.portal.reinvent.awsevents.com/connect/search.ww#loadSearch-searchPhrase=dev204&amp;amp;searchType=session&amp;amp;tc=0&amp;amp;sortBy=titleSort&amp;amp;p=&amp;amp;i(10042)=10481&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;休息时间&lt;/h2&gt;

&lt;p&gt;11月29日周二，在TopGolf有一场聚会。在一整天的旅行、培训和会议之后，TopGolf可以说是一个放松自我的好地方。茶歇时间是下午七点半，在MGM大酒店。可以点&lt;a href=&quot;https://github.com/blog/2281-github-is-headed-to-aws-re-invent&quot;&gt;这里&lt;/a&gt;进行预约&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;与GitHub的工程师们见面&lt;/h2&gt;

&lt;p&gt;点击&lt;a href=&quot;https://www.universe.com/events/meet-github-at-aws-re-invent-tickets-TKGQL4&quot;&gt;这里&lt;/a&gt;进行预约，你就有机会和我们的Hubbers技术团队进行一对一的交流，获取深度建议。&lt;/p&gt;

&lt;p&gt;当然你也可以来参观展览厅的Octobooth，观看直播展示，与我们的产品专家交流，也可以在展位上领取一些小礼品( &lt;a href=&quot;http://www.urbandictionary.com/define.php?page=3&amp;amp;term=SWAG&quot;&gt;grab some swag&lt;/a&gt;)。我们在#607展位等你，欢迎来撩:)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/lN4Pu0CzUhQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/30/GitHub_is_headed_to_AWS_re-Invent.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/30/GitHub_is_headed_to_AWS_re-Invent.html</guid>
        
        
      </item>
    
      <item>
        <title>QUICK, DRAW!</title>
        <description>&lt;p&gt;前几天看新闻，得知Google开发了这个叫做&lt;a href=&quot;https://quickdraw.withgoogle.com/&quot;&gt;QUICK, DRAW!&lt;/a&gt;的游戏(其实是作者和在Google工作的朋友开发的)。游戏名直译过来是&lt;em&gt;快画&lt;/em&gt;，也就是在规定时间内完成涂鸦。&lt;/p&gt;

&lt;p&gt;玩法很简单:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;你会得到六个单词；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对于每个词，你可以在20秒内用画画的方式进行描述；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;机器会对你的涂鸦进行识别，并判断与题目单词是否符合。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个游戏其实是一个基于人工智能的项目，可以看到游戏主页中有如下文字说明:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Can a neural network learn to recognize doodles?
See how well it does with your drawings and help teach it, just by playing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;大意就是说: 试试让神经网络来识别涂鸦吧~玩一玩，画一画，对机器进行识别训练，看看人工智能的表现如何~&lt;/p&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;About this game&lt;/code&gt;中还有更为详细的描述:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a game built with machine learning. You draw, and a neural network tries to guess what you’re drawing. Of course, it doesn’t always work. But the more you play with it, the more it will learn. So far we have trained it on a few hundred concepts, and we hope to add more over time. We made this as an example of how you can use machine learning in fun ways. Watch the video below to learn about how it works, and &lt;a href=&quot;https://aiexperiments.withgoogle.com/&quot;&gt;check out more A.I. Experiments here.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也就是说，这是一个基于机器学习的游戏。你画一些东西，然后神经网络会试着分析你画了啥。当然它现在还比较呆萌，不过你玩儿得越多，它学得也越多。现在机器已经学习了几百个词(及其对应的画风233)，今后我们还将教它认识更多。玩了这个游戏后你会发现，利用机器学习可以做很多有趣的事。下面的视频介绍了这个游戏的工作原理。更多信息还可以参考他们的&lt;a href=&quot;https://aiexperiments.withgoogle.com/&quot;&gt;A.I. Experiments&lt;/a&gt;主页。&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/X8v1GWzZYJ4&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;(视频中提到，游戏用到了和 &lt;strong&gt;Google翻译——手写输入识别&lt;/strong&gt;
相同的技术。)&lt;/p&gt;

&lt;p&gt;另外，这个&lt;a href=&quot;https://aiexperiments.withgoogle.com/&quot;&gt;A.I. Experiments&lt;/a&gt;主页上展示了许多有意思的项目，每一个都配有说明视频，大部分还公开了代码，放在&lt;a href=&quot;https://github.com/googlecreativelab&quot;&gt;GitHub-Google Creative Lab&lt;/a&gt;上。虽然目前还木有这个游戏的代码(估计还在实验阶段，也可能是因为涉及到关键技术，有的项目是利用了Google的API，而不是展现核心算法)，但是项目本身还是很有意思的。说不定玩着玩着，你就称为了一个灵魂画手:)&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/20/quick_draw.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/20/quick_draw.html</guid>
        
        
      </item>
    
      <item>
        <title>Unix_Network_Programming_笔记</title>
        <description>&lt;p&gt;今天开始啃Unix Network Programming Volume 1, Third Edition: The Sockets Networking API. 传说UNP是一本神书。英文版有1024页，看来要啃好久…&lt;/p&gt;

&lt;p&gt;看了看前言，还好能看懂。其实在这部分就有许多有意思的内容。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Aloha nui loa&lt;/p&gt;

    &lt;p&gt;2003年这一版的UNP，是基于&lt;code class=&quot;highlighter-rouge&quot;&gt;W. Richard Stevens&lt;/code&gt;的著作改进的。他老人家在1999年逝世(R.I.P.)。本书在&lt;strong&gt;Copyright&lt;/strong&gt;一节的最后有一个&lt;strong&gt;Dedication&lt;/strong&gt;，是对这位科学家的致敬，使用的祝福是&lt;strong&gt;Aloha nui load&lt;/strong&gt;:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;https://static1.squarespace.com/static/55724a5be4b03d8a8c853678/55724e1fe4b0ee3a75ad8ff1/557e5a85e4b06b6897c0f00a/1434344069648/SPS-Aloha+nui+loa-01.jpg?format=1500w&quot; alt=&quot;Aloha nui loa&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;从&lt;a href=&quot;https://jacobmurdock.com/jacob-murdock/aloha-nui-loa/&quot;&gt;这里&lt;/a&gt;查到，这是夏威夷原住民的方言，&lt;code class=&quot;highlighter-rouge&quot;&gt;Aloha&lt;/code&gt;代表了问好、和平、爱等等，日用也可以近似于法语&lt;code class=&quot;highlighter-rouge&quot;&gt;Bonjour&lt;/code&gt;(你好)。&lt;code class=&quot;highlighter-rouge&quot;&gt;nui loa&lt;/code&gt;可以理解为英文中的&lt;code class=&quot;highlighter-rouge&quot;&gt;very much&lt;/code&gt;。所以连起来可以理解为对他老人家的祝福与怀念。&lt;/p&gt;

    &lt;p&gt;除此以外，由Gary R. Wright代为照理的Stevens的&lt;a href=&quot;http://www.kohala.com/start/&quot;&gt;主页&lt;/a&gt;地址中的&lt;code class=&quot;highlighter-rouge&quot;&gt;Kohala&lt;/code&gt;也是夏威夷的一个岛名。夏威夷，应当是个神奇的地方吧。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;recipes, 菜谱&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;W. Richard Stevens&lt;/code&gt;自己也是个非常有趣的人(吃货)。他的&lt;a href=&quot;http://www.kohala.com/start/&quot;&gt;网站&lt;/a&gt;上，除了介绍生平之外，还专门摆放了一个栏目，叫做&lt;a href=&quot;http://www.kohala.com/start/recipes/recipes.html&quot;&gt;菜谱&lt;/a&gt;:&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;And you thought I only wrote computer books? During the 1980s, while working at HSI in Connecticut, I did a lot of baking on the weekends, probably as a stress reliever from working at a startup, and also because I am a confirmed chocoholic. On Monday morning I would always take in to work what was left over, often finding people waiting in the coffee room for me.&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;大致意思就是，他喜欢用做饭(烘培)来缓解压力，另外他也非常喜欢巧克力。每当他星期一来上班，周围的同事总是虎视眈眈地看着他。别担心，这不是因为有啥深仇大恨，只是大家对着他带来的点心咽口水罢了(ˉ﹃ˉ)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这么看来，UNP这本神书啃起来味道应该不错。接下来，就让我们开始食用正餐吧。说不定里面还隐藏了其他的菜谱呢^3^&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Unix Network Programming Volume 1, Third Edition: The Sockets Networking API&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://jacobmurdock.com/jacob-murdock/aloha-nui-loa/&quot;&gt;JacobMurdock-Aloha Nui Loa&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.kohala.com/start/&quot;&gt;W. Richard Stevens’ Home Page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/17/Unix_Network_Programming_note01.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/17/Unix_Network_Programming_note01.html</guid>
        
        
      </item>
    
      <item>
        <title>翻译：Game Off Theme Announcement</title>
        <description>&lt;p&gt;这是&lt;strong&gt;翻译&lt;/strong&gt;系列的第一篇文章。原文来自 &lt;a href=&quot;https://github.com/blog/2274-game-off-theme-announcement&quot;&gt;Game Off Theme Announcement&lt;/a&gt;，发布于2016年11月02日。以下是译文。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/121322/19498019/d8827370-9543-11e6-82d8-6da822b6147b.png&quot; alt=&quot;GitHub Game Jam&quot; /&gt;&lt;/p&gt;

&lt;p&gt;几周之前，我们对GitHub独家特供的GGJ进行了&lt;a href=&quot;https://github.com/blog/2262-github-s-game-jam-game-off-returns-next-month&quot;&gt;宣传&lt;/a&gt;。今天，我们将公布本届GGJ的主题，比赛也将即刻开始，各位老司机准备出发吧！
(注: GGJ, GitHub Game Jam, 是一个类似于hackathon的游戏开发马拉松，一般在每年11月举办，为期一个月。)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;挑战&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;本届GGJ将基于以下三个关键词展开：&lt;code class=&quot;highlighter-rouge&quot;&gt;黑客技术(hacking)&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;新颖炫酷(modding)&lt;/code&gt;， &lt;code class=&quot;highlighter-rouge&quot;&gt;(现实)增强(augmenting)&lt;/code&gt;. 戴德兰先生将在月底到来，因此各位开发者将有一个月的时间来进行游戏制作。&lt;/p&gt;

&lt;p&gt;需要说明的是，主题可以扩展，筒子们可以根据以上关键词大胆YY。举几个栗子，大家可以搞这么些玩意儿:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;一个不断奔跑的小人，用打了码的(像素化比较萌)斧子砍倒沿路的二叉树&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;一个现代人穿着远古时期的套装，出现在3D或者VR世界&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;利用增强现实，把章鱼猫带进现实世界&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果你觉得自己的脑洞更有创意更加新颖，那就赶快行动参加比赛吧！你既可以单干，也可以团战，开发平台和设备可以随意。另外，我们鼓励使用开源的游戏引擎和游戏库进行开发。当然了，这不是强制性要求。&lt;/p&gt;

&lt;p&gt;我们将从中选出选出最有意思的游戏，放在GitHub的&lt;a href=&quot;https://github.com/blog/&quot;&gt;官方博客&lt;/a&gt;上，让全世界的G友们都有机会欣赏你的创意，并能从中学习或为你们的项目做出贡献。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;如何参赛？&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;如果你还没注册G站，点&lt;a href=&quot;https://github.com/signup/free&quot;&gt;这里&lt;/a&gt;进行注册&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;从&lt;a href=&quot;https://github.com/github/game-off-2016&quot;&gt;github/game-off-2016&lt;/a&gt;创建你自己的分支(fork)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将项目克隆到本地并进行开发&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在12月1日之前将所有代码推送到你的分支仓库&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;更新说明文件&lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt;，内容包括游戏描述、游戏玩法。另外该文件也需要告诉读者如何下载、如何构建、如何编译，依赖关系如何等&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;最后，填写并提交&lt;a href=&quot;https://gameoff.wufoo.com/forms/game-off-2016/&quot;&gt;这个表格&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;获取帮助&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;神马，你还没有听说过Git, GitHub, 版本控制…？没关系，入门很简单，你只需要:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;阅读&lt;a href=&quot;https://git-scm.com/documentation&quot;&gt;Git文档&lt;/a&gt;，从中你会知道关于版本控制和Git的一切内容&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;阅读&lt;a href=&quot;https://help.github.com/&quot;&gt;GitHub指南&lt;/a&gt;，从中你会得知所有关于GitHub的内容&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果遇到问题，可以联系我们友善的&lt;a href=&quot;https://github.com/contact?form%5Bsubject%5D=GitHub%20Game%20Off&quot;&gt;技术支持团队&lt;/a&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果有针对本次比赛的问题，欢迎提交到&lt;a href=&quot;https://github.com/github/game-off-2016/issues/new&quot;&gt;官方的问答区&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，你也可以在Twitter上用&lt;code class=&quot;highlighter-rouge&quot;&gt;#ggo16&lt;/code&gt;标明主题参加讨论。我们已经迫不及待想要试玩这一大波新鲜的游戏了~&lt;/p&gt;

&lt;p&gt;GLHF!&amp;lt;3 (good luck &amp;amp; have fun ≈ gggl, 开心最重要么么大)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-3&quot;&gt;相关阅读&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.douban.com/note/265646157/&quot;&gt;2012的Github Game Off&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/a776a3e75dd5&quot;&gt;Global Game Jam的体验和分享&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jianzi0307.github.io/2014/01/13/game-jam-e6-b1-82-e7-94-9f-e6-89-8b-e5-86-8c/&quot;&gt;GAME JAM 求生手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/tpai/6da413c2c8f082982c2a&quot;&gt;Global Game Jam 2015 台中會場行前通知&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/15/Game_Off_Theme_Announcement.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/15/Game_Off_Theme_Announcement.html</guid>
        
        
      </item>
    
      <item>
        <title>FFMPEG学习笔记</title>
        <description>&lt;h2 id=&quot;section&quot;&gt;音频&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;剪切音乐&lt;/p&gt;

    &lt;p&gt;比如有一首好听的歌，我们想把它作为铃声。但是整首歌太长，要截取最好听的那一段，就可以借助&lt;code class=&quot;highlighter-rouge&quot;&gt;ffmpeg&lt;/code&gt;。根据&lt;a href=&quot;https://segmentfault.com/a/1190000000414341&quot;&gt;参考资料1&lt;/a&gt;，如果是作用在视频上，需要的参数是截取部分的开始时间&lt;code class=&quot;highlighter-rouge&quot;&gt;start_time&lt;/code&gt;和结束时间&lt;code class=&quot;highlighter-rouge&quot;&gt;stop_time&lt;/code&gt;，单位是秒。【注意，&lt;a href=&quot;https://segmentfault.com/a/1190000000414341&quot;&gt;参考资料1&lt;/a&gt;中原文的&lt;code class=&quot;highlighter-rouge&quot;&gt;剪切&lt;/code&gt;一节，可能会由楼主所用起止时间变量名引起误解，具体说明可见链接中&lt;code class=&quot;highlighter-rouge&quot;&gt; @_ljj110719&lt;/code&gt;的回复】&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i input.mp4 -ss **START_TIME** -to **STOP_TIME** -acodec copy -vcodec copy output.mp4
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;其中，参数&lt;code class=&quot;highlighter-rouge&quot;&gt;-to&lt;/code&gt;表示定位到某个时间点，如果换成&lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt;则表示持续时间。&lt;/p&gt;

    &lt;p&gt;实践发现，以上方法同样可以作用在音频上。假设我们要截取的音乐是&lt;code class=&quot;highlighter-rouge&quot;&gt;I_do.mp3&lt;/code&gt;，从&lt;code class=&quot;highlighter-rouge&quot;&gt;00:00:25&lt;/code&gt;到&lt;code class=&quot;highlighter-rouge&quot;&gt;00:01:25&lt;/code&gt;的片段，也就是从&lt;code class=&quot;highlighter-rouge&quot;&gt;25&lt;/code&gt;秒到&lt;code class=&quot;highlighter-rouge&quot;&gt;85&lt;/code&gt;秒。由于现在我们只需要音频(audio)，因此可以不要后面的&lt;code class=&quot;highlighter-rouge&quot;&gt;-vcodec copy&lt;/code&gt;。所以我们的目标可以用如下命令实现:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i I_do.mp3 -ss 25 -to 85 -acodec copy I_do__snippet.mp3
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;视频&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;分离音频和图像&lt;/p&gt;

    &lt;p&gt;参考用途: 去掉美剧中的视频，仅保留音频，用于听力练习。方便携带，同时减小体积。假设要处理的视频是&lt;code class=&quot;highlighter-rouge&quot;&gt;input_video.mp4&lt;/code&gt;，输出音频保存为&lt;code class=&quot;highlighter-rouge&quot;&gt;output_audio.mp3&lt;/code&gt;，则:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i input_video.mp4 -vn -ab 256 output_audio.mp3
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(不断更新)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;参考&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000414341&quot;&gt;通过 ffmpeg 无损剪切/拼接视频&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.labnol.org/internet/useful-ffmpeg-commands/28490/&quot;&gt;Useful FFmpeg Commands&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 13 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/13/notes_of_learning_ffmpeg.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/13/notes_of_learning_ffmpeg.html</guid>
        
        
      </item>
    
      <item>
        <title>使用python获取天气预报</title>
        <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;工具：python3.4 (配合 &lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;目标：获取天气预报，内容包括【时间】+【天气】+【气温】&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/just%20for%20fun/weather&quot;&gt;代码参考&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有了之前的&lt;a href=&quot;https://jjayyyyyyy.github.io/2016/10/30/36kr_newsflash_reader.html&quot;&gt;36kr新闻阅读器&lt;/a&gt;作为基础，我们不难写出更多基于python网络库的小程序。这次我们来写一个简单实用的脚本来获取天气预报，数据来源是&lt;a href=&quot;http://www.weather.com.cn/&quot;&gt;中国天气网&lt;/a&gt;。最终呈现在终端或者命令行的内容类似于:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
6号（今天） 多云 23 ~ 16℃

7号（明天） 小雨转中雨 22 ~ 15℃ 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;1. 分析网页&lt;/h2&gt;

&lt;p&gt;这次的脚本也是一个Spider，所以第一步当然也是分析网页结构。打开&lt;a href=&quot;http://www.weather.com.cn/&quot;&gt;中国天气网&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在搜索栏输入城市，这里以上海为例，可以看到地址栏变成了&lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.weather.com.cn/weather/101020100.shtml&lt;/code&gt;. 接着右键点击&lt;code class=&quot;highlighter-rouge&quot;&gt;7天&lt;/code&gt;预报中的&lt;code class=&quot;highlighter-rouge&quot;&gt;今天&lt;/code&gt;，选择&lt;code class=&quot;highlighter-rouge&quot;&gt;Inspect&lt;/code&gt;(检查元素(N))，可以看到这段代码&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;t clearfix&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sky skyid lv2 on&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;6日（今天）&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;big&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;png40 d00&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/big&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;big&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;png40 n00&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/big&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;多云&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wea&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;多云&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;23&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;/&lt;span class=&quot;nt&quot;&gt;&amp;lt;i&amp;gt;&lt;/span&gt;16℃&lt;span class=&quot;nt&quot;&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
...
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第2~7天的内容结构也是这样。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;2. 获取网页内容&lt;/h2&gt;

&lt;h4 id=&quot;section-2&quot;&gt;2.1 利用正则表达式&lt;/h4&gt;

&lt;p&gt;我们利用&lt;code class=&quot;highlighter-rouge&quot;&gt;urllib.request&lt;/code&gt;获取网页内容，然后用&lt;a href=&quot;https://jjayyyyyyy.github.io/2016/10/30/36kr_newsflash_reader.html&quot;&gt;36kr新闻阅读器&lt;/a&gt;中提到的&lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt;模块来”暴力”提取关键信息。所谓&lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt;，就是Regular Expression，即正则表达式。它可以被分为很多类，差异比较可以看&lt;a href=&quot;http://www.cnblogs.com/chengmo/archive/2010/10/10/1847287.html&quot;&gt;这里&lt;/a&gt;。对于python所用的正则表达式，可以参考&lt;a href=&quot;https://docs.python.org/3/library/re.html&quot;&gt;官方文档&lt;/a&gt;，以及&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143193331387014ccd1040c814dee8b2164bb4f064cff000&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;首先，我们引入两个模块:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/urs/bin/enc python3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接着，下载网页内容:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://www.weather.com.cn/weather/101020100.shtml'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;weekly_weather&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样，我们就把内容保存在了&lt;code class=&quot;highlighter-rouge&quot;&gt;weekly_weather&lt;/code&gt;。接下来，我们分析第1节中的网页源码，进行正则匹配。观察以后可以发现:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;对于&lt;code class=&quot;highlighter-rouge&quot;&gt;时间&lt;/code&gt;，其结构是这样的: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;([1-9].*)&amp;lt;/h1&amp;gt;&lt;/code&gt;。其中&lt;code class=&quot;highlighter-rouge&quot;&gt;[1-9]&lt;/code&gt;表示匹配1~9开头的任意数字，&lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt;表示匹配任意字符串。由此可以匹配出这一天是几号，如(11月)&lt;code class=&quot;highlighter-rouge&quot;&gt;6号&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对于&lt;code class=&quot;highlighter-rouge&quot;&gt;天气&lt;/code&gt;，其结构是这样的: &lt;code class=&quot;highlighter-rouge&quot;&gt;.*class=&quot;wea&quot;&amp;gt;(.*)&amp;lt;/p&amp;gt;&lt;/code&gt;，可以匹配出这一天是晴天、多云，或者其他天气。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对于&lt;code class=&quot;highlighter-rouge&quot;&gt;气温&lt;/code&gt;，其结构是这样的: &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;span&amp;gt;([0-9]*)&amp;lt;/span&amp;gt;/&amp;lt;i&amp;gt;([0-9].*)&amp;lt;/i&amp;gt;&lt;/code&gt;。这样可以匹配出这一天是几度到几度，如&lt;code class=&quot;highlighter-rouge&quot;&gt;23~16℃&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因此可以利用python的&lt;code class=&quot;highlighter-rouge&quot;&gt;re.findall()&lt;/code&gt;提取出以上三项内容，并保存于&lt;code class=&quot;highlighter-rouge&quot;&gt;seven_days&lt;/code&gt;，注意不要遗漏换行符&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;seven_days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;([1-9].*)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;(.*)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n.*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;([0-9]*).*&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;([0-9].*)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;/i&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weekly_weather&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;re.findall()&lt;/code&gt;会以&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;的形式返回所有匹配的字符串。由于每一天有三个匹配项，因此&lt;code class=&quot;highlighter-rouge&quot;&gt;seven_days&lt;/code&gt;是一个&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;，而其每一个元素都是一个元组&lt;code class=&quot;highlighter-rouge&quot;&gt;tuple&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;最后就是将结果打印在屏幕上了:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seven_days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;beautifulsoup&quot;&gt;2.2 使用BeautifulSoup&lt;/h4&gt;

&lt;p&gt;此外，还可以使用&lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/&quot;&gt;BeautifulSoup&lt;/a&gt;这一利器来帮我们解析html，进而得到我们想要的内容。 &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt;的特点就是直观，可以通过标签类别、名字和属性等方式获得内容。&lt;/p&gt;

&lt;p&gt;要使用&lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt;，首先要安装必要的包:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pip3 install beautifulsoup4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接着引入模块:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/urs/bin/enc python3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后和之前一样，下载资源:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://www.weather.com.cn/weather/101020100.shtml'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;weekly_weather&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下一步，我们生成一个实例化一个BeautifulSoup对象，用html.parser去解析下载到的html资源，保存为一个有层次结构的soup:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weekly_weather&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html.parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果分析一下上一节的html代码，我们可以发现&lt;code class=&quot;highlighter-rouge&quot;&gt;class=&quot;t clearfix&quot;&lt;/code&gt;是独一无二的。因此我们可以利用它来寻找7天的天气数据。需要注意的是里面的参数名是&lt;code class=&quot;highlighter-rouge&quot;&gt;class_&lt;/code&gt;而非&lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;seven_days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t clearfix'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在seven_days的内容就变成了那一段html代码中去掉所有标签的内容，由于比较长，这里就不贴出来了。直接用&lt;code class=&quot;highlighter-rouge&quot;&gt;print(seven_days)&lt;/code&gt;就能看到。&lt;/p&gt;

&lt;p&gt;观察其特点，我们根据&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;将其拆分，并舍去空白段，将有用信息存到一个&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;里面:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;seven_days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seven_days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seven_days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;至此，我们就可以在屏幕上输出天气信息了:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;2.3 练习&lt;/h4&gt;

&lt;p&gt;以上，我们用两种方式完成了获取天气预报的小程序，作为脚本它是足够用了，不过我们还可以稍作改进，在参考github上的代码之前，以下几点就作为练习啦~&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;简化优化代码，抽象成函数，模块化。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果在晚上使用，可以发现屏幕上输出的是明天加后天的天气。那么，如何获取今晚的天气（如气温）呢？&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;参考&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/chengmo/archive/2010/10/10/1847287.html&quot;&gt;Linux shell 正则表达式(BREs,EREs,PREs)差异比较&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/re.html&quot;&gt;Python3 Library: re&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143193331387014ccd1040c814dee8b2164bb4f064cff000&quot;&gt;廖雪峰_python教程_正则表达式&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.crummy.com/software/BeautifulSoup/&quot;&gt;BeautifulSoup&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.weather.com.cn/weather/101020100.shtml&quot;&gt;中国天气网&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014317852443934a86aa5bb5ea47fbbd5f35282b331335000&quot;&gt;廖雪峰_python教程_map/reduce&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 06 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/06/get_weather.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/06/get_weather.html</guid>
        
        
      </item>
    
      <item>
        <title>5th Nov. 'V for Vendetta'</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Remember, remember, the 5th of November…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;看到这段台词，是否有一些电影片段从你脑海中浮现呢？&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;没错，就是&lt;code class=&quot;highlighter-rouge&quot;&gt;V for Vendetta&lt;/code&gt;(中译名: &lt;a href=&quot;https://movie.douban.com/subject/1309046/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;V字仇杀队&lt;/code&gt;&lt;/a&gt;)。今天是11月5日，而&lt;a href=&quot;http://www.imdb.com/list/ls063473199/videoplayer/vi669300249?ref_=hm_hp_i_1&quot;&gt;IMDb&lt;/a&gt;也推出了一个纪念视频:&lt;/p&gt;

&lt;iframe src=&quot;http://www.imdb.com/videoembed/vi669300249&quot; allowfullscreen=&quot;&quot; width=&quot;854&quot; height=&quot;500&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;这部电影虽然是05年的，但是与百年前鲁迅先生的文字一样，很多内容折射到今天仍然是十分贴切。如果你还没看过，不妨加入这个周末的观影列表;)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;另外今天跑了12km，配速还行，但一下子加量这么多，而且路面又比预想的要渣，所以还是有点吃不消。本来想在今天写一篇文章，记录一下如何利用python获取天气预报，有点累写不动了0.0…留给明天吧。&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/05/V_for_Vendetta.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/05/V_for_Vendetta.html</guid>
        
        
      </item>
    
      <item>
        <title>Rather Be</title>
        <description>&lt;p&gt;歌名: &lt;a href=&quot;http://music.163.com/#/song?id=34218195&quot;&gt;Rather Be&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今天偶遇这首歌，接着就是一段回忆。&lt;/p&gt;

&lt;p&gt;曾经，微博上有这么一条秒拍视频&lt;a href=&quot;http://video.weibo.com/show?fid=1034:1057a4d06bf228d27eacf0c1ac7644ef&quot;&gt;#每个食物自身最辉煌的瞬间#&lt;/a&gt;。挺好玩的，就转给了某个小盆友，然后得知了这首歌的名字。&lt;/p&gt;

&lt;p&gt;仄仄声声，恍如昨日。&lt;/p&gt;

</description>
        <pubDate>Fri, 04 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/04/rather_be.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/04/rather_be.html</guid>
        
        
      </item>
    
      <item>
        <title>36kr新闻阅读器</title>
        <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;环境：python3.4 + Chrome + terminal/cmd&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;本文代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/36kr_newsflash_reader&quot;&gt;36kr_newsflash_reader&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这篇文章，我们来学习如何用python写一个轻量级的资讯阅读器。我们的抓取目标是&lt;a href=&quot;http://36kr.com/newsflashes&quot;&gt;36Kr快讯&lt;/a&gt;。可以看到，这是一个比较简洁的资讯网站，上面会更新一些科技时讯(以前质量不错，现在良莠不齐)。不过由于这个网站结构比较清晰，所以比较适合作为我们的第一个栗子。&lt;/p&gt;

&lt;p&gt;我们要写的这个阅读器，可以算是一个蜘蛛(Spider)。Spider的特点是简单轻便目标明确，其实可以理解为针对某个网页的小爬虫(Crawler)。更多相关对比可见参考资料。&lt;/p&gt;

&lt;p&gt;下面开始进入正题。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;1. 分析网页结构&lt;/h2&gt;

&lt;p&gt;首先我们打开36kr快讯的&lt;a href=&quot;http://36kr.com/newsflashes&quot;&gt;主页&lt;/a&gt;。我们看到网站内容结构是这样的：【一行标题+一段简介】。因此我们的目标是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;抓取【标题和简介】，呈现在命令行或者终端，以此代替浏览器&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;每次仅打印出标题，以便快速浏览&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果需要阅读更多，再输出新闻简介&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有了目标，我们该怎么开始呢？这还要从浏览器开始说起。我们平时基本是用浏览器看网页。浏览器工作的原理大致是这样：先通过HTTP等协议把内容从服务器取回本地，然后再进行渲染和呈现。我们的阅读器不需要复杂的渲染，只需要从服务器拿回内容，然后简单地输出文本即可。&lt;/p&gt;

&lt;p&gt;那么，上面提到的【标题和简介】从哪里来呢？我们可以使用Chrome的开发者工具来寻找资源。首先按下F12，在选项卡中选择【Network】，然后刷新一下网页，在该选项卡中就能看到浏览器通过网络下载了很多资源。&lt;/p&gt;

&lt;p&gt;在这么多资源中，寻找我们想要的内容有时候比较麻烦。当然，有一种比较简单粗暴的方式：把整个网页下载下来，然后用正则表达式等方式进行提取。也可以专门分析出某个资源的来源，再针对性地下载。对于36kr，详细的寻找资源的过程大家可以当作 &lt;strong&gt;练习1&lt;/strong&gt; (hint: 点击一下网页下方的【浏览更多】，再观察新的资源)。这儿就直接给出两个可以验证的结果:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://36kr.com/newsflashes.json&quot;&gt;地址1&lt;/a&gt; &lt;a href=&quot;http://36kr.com/api/newsflash&quot;&gt;地址2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们可以看到，两者都是json形式的数据，内容包含了我们所需的【标题和简介】。其中地址1是比较早的接口。入口2是前段时间发现的，从地址中的这个&lt;code class=&quot;highlighter-rouge&quot;&gt;api&lt;/code&gt;我们可以猜测这是正式的接口，短时间内不会取消。因此我们就用&lt;a href=&quot;http://36kr.com/api/newsflash&quot;&gt;地址2&lt;/a&gt;作为获取资源的入口。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;2. 获取网页内容&lt;/h2&gt;

&lt;p&gt;有了以上的分析作为基础，我们就可以使用python功能强大的网络库，来获取和分析网页内容了。如果有兴趣，可以尝试一个叫做&lt;a href=&quot;https://github.com/kennethreitz/requests&quot;&gt;requests&lt;/a&gt;的神器。不过这次我们就使用&lt;code class=&quot;highlighter-rouge&quot;&gt;python3.4&lt;/code&gt;自带的包(Package)和模块(Module):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;urllib.request&lt;/code&gt; 用于下载资源。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; 用于解析json数据，也可以配合文件操作，将&lt;a href=&quot;http://36kr.com/api/newsflash&quot;&gt;地址2&lt;/a&gt; 的数据保存为容易观察分析的格式。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们首先新建一个名为&lt;code class=&quot;highlighter-rouge&quot;&gt;newsflash.py&lt;/code&gt;的文件，然后写入如下内容:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;所谓下载资源，大体上就是一个客户端发出请求，然后服务端进行响应，客户端再接收的过程。我们要做的，就是回到Chrome点开主页资源&lt;code class=&quot;highlighter-rouge&quot;&gt;newsflashes&lt;/code&gt;，结合开发者工具显示的信息，然后用Python来模拟浏览器的行为。&lt;/p&gt;

&lt;p&gt;我们先来构造一个http请求。因为不用登陆，所以简单地利用&lt;code class=&quot;highlighter-rouge&quot;&gt;url+UA&lt;/code&gt;的方式构造请求头即可。&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;就是刚才的&lt;code class=&quot;highlighter-rouge&quot;&gt;地址2&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;UA&lt;/code&gt;就是&lt;code class=&quot;highlighter-rouge&quot;&gt;User-Agent&lt;/code&gt;。于是乎:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://36kr.com/api/newsflash'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'User-Agent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接着我们把这个请求发送出去，并把接收到的响应保存为resp:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再回到Chrome，我们可以看到成功接收响应的时候会返回一个200的状态码。所以我们可以以此为依据，初步判断请求-响应是否成功:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Status:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reason&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;保存退出后运行，可以看到状态码是200，和Chrome上面一样，说明响应成功。以后在抓取其他网页的时候可能会遇到各种奇怪的问题，有时候用这个状态码可以帮助我们分析解决。下一步，我们把内容读取出来。由于网络上传输的内容都是编码后的bytes类型，我们要将其解码。解码方式可以看到Chrome中写明了是&lt;code class=&quot;highlighter-rouge&quot;&gt;utf-8&lt;/code&gt;。当然，做这些的前提是响应成功，所以我们要加上一行判断：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Status Error!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这样，内容就保存到&lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;中了。当然我们也可以将它保存为文件，然后打开看看里面到底是什么东西：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;保存退出后运行，然后打开&lt;code class=&quot;highlighter-rouge&quot;&gt;data.txt&lt;/code&gt;。对比一下可以发现，里面的内容和&lt;a href=&quot;http://36kr.com/api/newsflash&quot;&gt;地址2&lt;/a&gt;呈现的内容是一样的。至此，我们完成了第一个小目标~&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;3. 解析数据，呈现内容&lt;/h2&gt;

&lt;p&gt;不过现在还有一个比较大的问题。我们所看到的内容，目前还只是一个很长的字符串，很难观察，也不便于关键信息的提取。所以接下来我们将其转化为json格式的数据。首先在最上面导入&lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt;模块:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后修改刚才保存文件的过程:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;json_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'json_data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ensure_ascii&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再打开&lt;code class=&quot;highlighter-rouge&quot;&gt;json_data.txt&lt;/code&gt;，可以发现它已经整齐地排好格式了。稍加观察，可以发现在&lt;code class=&quot;highlighter-rouge&quot;&gt;data-&amp;gt;items&lt;/code&gt;的每一个元素中，&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;是我们想要的标题，&lt;code class=&quot;highlighter-rouge&quot;&gt;description&lt;/code&gt;是新闻的详细描述，而&lt;code class=&quot;highlighter-rouge&quot;&gt;updated_at&lt;/code&gt;是发出新闻的时间。这些就是我们想要的信息。接下来，我们试着将第一条新闻输出到屏幕上:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'items'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'updated_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;detail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'description'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;保存退出后运行，可以看到屏幕上输出了标题，时间，还有描述。如果我们想要把所有的新闻都打印出来，可以用for循环的方式。另外，一般阅读的时候我们看看标题就好了，如果对某个标题感兴趣，再告诉阅读器来输出细节，包括时间和内容。这样，我们会有更好的阅读体验，不会像刚才一样，屏幕上一堆东西影响阅读。我们回到编辑器，把上一段代码删掉，然后写一个循环:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'items'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;us_input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'q'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Done!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'updated_at'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'description'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Done!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后保存退出再运行，看看效果如何。按下回车可以输出一条新闻标题。输入&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;就可以得到时间和详细内容。如果看到一半不想看了，可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+c&lt;/code&gt;结束。也可以输入&lt;code class=&quot;highlighter-rouge&quot;&gt;q&lt;/code&gt;退出，屏幕上会打印一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Done!&lt;/code&gt;，表示完成。&lt;/p&gt;

&lt;p&gt;至此，我们这个简单的新闻阅读器已经差不多完成啦。不过我们发现，一次只能看10条新闻。如何才能显示更多呢？这个就当作留给大家的 &lt;strong&gt;练习2&lt;/strong&gt; 吧 (hint: 和练习1有关)~&lt;/p&gt;

&lt;p&gt;最后我们还可以做一下适当的封装，把这些都包裹成函数，只留下接口。代码就不在这儿贴了，请参考 &lt;a href=&quot;https://github.com/jJayyyyyyy/36kr_newsflash_reader&quot;&gt;36kr_newsflash_reader&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这么二三十行代码就能完成一个简单的新闻阅读器，用python是不是很方便~以后我们还会用python做一些其他的好玩的东西，我们下次再见~&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;参考：&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.admin5.com/article/20080825/100523.shtml&quot;&gt;Spider与Crawler不同点&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/21471960/answer/81061538&quot;&gt;分析动态网页&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://python3-cookbook.readthedocs.io/zh_CN/latest/c06/p02_read-write_json_data.html&quot;&gt;python3-cookbook&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/12309269/how-do-i-write-json-data-to-a-file-in-python&quot;&gt;How do I write JSON data to a file in Python?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/18337407/saving-utf-8-texts-in-json-dumps-as-utf8-not-as-u-escape-sequence&quot;&gt;Saving utf-8 texts in json.dumps as UTF8, not as \u escape sequence&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/&quot;&gt;liaoxuefeng&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jJayyyyyyy/36kr_newsflash_reader/&quot;&gt;more&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;20161110 更新(补充说明):&lt;/p&gt;

    &lt;p&gt;第2节中，我们用&lt;code class=&quot;highlighter-rouge&quot;&gt;if 200 == resp.status&lt;/code&gt;来判断是否成功响应，虽然能够执行，但其实不是一个好的实践。&lt;/p&gt;

    &lt;p&gt;反例1. 如果服务器直接返回&lt;code class=&quot;highlighter-rouge&quot;&gt;404&lt;/code&gt;的状态码，比如输入错误的地址1: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://36kr.com/newsflash.json&lt;/code&gt;，那么python会直接抛出&lt;code class=&quot;highlighter-rouge&quot;&gt;urllib.error.HTTPError&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;反例2. 如果输入错误的地址2: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://36kr.com/api/newsflashes&lt;/code&gt;，服务器会返回&lt;code class=&quot;highlighter-rouge&quot;&gt;200&lt;/code&gt;的状态码，但是响应的实际内容是一个&lt;code class=&quot;highlighter-rouge&quot;&gt;404&lt;/code&gt;页面，其中肯定木有我们想要的数据。这时候再用&lt;code class=&quot;highlighter-rouge&quot;&gt;json.loads()&lt;/code&gt;就会出现&lt;code class=&quot;highlighter-rouge&quot;&gt;ValueError&lt;/code&gt;，因为内容格式不对。&lt;/p&gt;

    &lt;p&gt;所以，更好的方式是利用&lt;code class=&quot;highlighter-rouge&quot;&gt;try...except...&lt;/code&gt;，参见&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143191375461417a222c54b7e4d65b258f491c093a515000&quot;&gt;这里&lt;/a&gt;。这样，程序运行异常时，会跳到错误处理代码，而不是直接退出。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 30 Oct 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/10/30/36kr_newsflash_reader.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/30/36kr_newsflash_reader.html</guid>
        
        
      </item>
    
  </channel>
</rss>
