<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FrozenMap</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 31 Jan 2017 23:44:34 +0800</pubDate>
    <lastBuildDate>Tue, 31 Jan 2017 23:44:34 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>PAT Basic 1010</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1010_%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E5%AF%BC&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1010-1010--25&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1010&quot;&gt;原题&lt;/a&gt;： 1010. 一元多项式求导 (25)&lt;/h2&gt;

&lt;p&gt;设计函数求一元多项式的导数。（注：x&lt;sup&gt;n&lt;/sup&gt;（n为整数）的一阶导数为n*x&lt;sup&gt;n-1&lt;/sup&gt;。）&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是0，但是表示为“0 0”。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3 4 -5 2 6 1 -2 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;12 3 -10 1 6 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-5&quot;&gt;题目分析&lt;/h1&gt;

&lt;p&gt;本题的题意不明确，至少题意、输入输出样例与测试点之间有矛盾，不进行过多分析。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;AC代码&lt;/p&gt;

    &lt;p&gt;网上流传的大部分是这个思路的代码(可以通过测试)&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include&amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;n&quot;&gt;is_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d %d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_start&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//trick
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0 0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;最后那段应该是个trick，专门应对某个测试用例的。这是我猜的，因为与题目逻辑不符。如有错误请指正。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-6&quot;&gt;测试结果描述&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;两者非零 打印 [coe*exp, exp-1]，否则打印 [0 0]
通过测试2 3 5
//然而这和输入样例明显不符，输入-2 0，输出应该是空。
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test2&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;exp 非零 就打印 [coe*exp, exp-1]
通过测试 1 2 4
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test3&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;两者非零 打印 [coe*exp, exp-1]， 两者全零，打印[0 0]，退出循环后如果发现还没有输出，则打印[0 0]
通过全部测试
//然而这也和输入样例不符，输入[-2 0]，输出应该是空。
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test4(牛客网测试用例)&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
353 1000 -335 -1000

输出
353000 999 335000 -1001

输入:
-2 0

对应输出应该为:
0 0

//这对应了那个trick。但我觉得明显不符合题目描述啊。。。
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-7&quot;&gt;其他参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www-s.acm.illinois.edu/webmonkeys/book/c_guide/2.12.html#scanf&quot;&gt;scanf&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scanf(&quot;%s&quot;, str)&lt;/code&gt;直到空格等字符结束，不会读取空格&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gets()&lt;/code&gt;直到换行符才结束，结束时增加&lt;code class=&quot;highlighter-rouge&quot;&gt;\0&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fgets(str, MAX, stdin)&lt;/code&gt;直到换行符才结束，或者读到MAX-1个字符结束，末尾添加&lt;code class=&quot;highlighter-rouge&quot;&gt;\0&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getchar()&lt;/code&gt;逐个读取字符，不会跳过空格，换行符等字符。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www-s.acm.illinois.edu/webmonkeys/book/c_guide/2.12.html#getchar&quot;&gt;int getchar(void);&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Gets a character (an unsigned char) from stdin. On success the character is returned. If the end-of-file is encountered, then EOF is returned and the end-of-file indicator is set. If an error occurs then the error indicator for the stream is set and EOF is returned.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www-s.acm.illinois.edu/webmonkeys/book/c_guide/2.13.html#atoi&quot;&gt;int atoi(const char *str);&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;atoi()&lt;/code&gt;的原型在&lt;code class=&quot;highlighter-rouge&quot;&gt;stdlib.h&lt;/code&gt;中声明。将字符串(0-9)转变成数字，可识别负号&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;The string pointed to by the argument str is converted to an integer (type int). Any initial whitespace characters are skipped (space, tab, carriage return, new line, vertical tab, or formfeed). The number may consist of an optional sign and a string of digits. Conversion stops when the first unrecognized character is reached.
On success the converted number is returned. If the number cannot be converted, then 0 is returned.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www-s.acm.illinois.edu/webmonkeys/book/c_guide/2.12.html#ungetc&quot;&gt;int ungetc(int char, FILE *stream);&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;将字符char扔回stream流，比如把&lt;code class=&quot;highlighter-rouge&quot;&gt;'a'&lt;/code&gt;放回输入流，这样下次用scanf()，getchar()等函数获取输入的时候首先会读到这个字符。&lt;/p&gt;

    &lt;p&gt;Pushes the character char (an unsigned char) onto the specified stream so that the this is the next character read. The functions fseek, fsetpos, and rewind discard any characters pushed onto the stream.&lt;/p&gt;

    &lt;p&gt;Multiple characters pushed onto the stream are read in a FIFO manner (first in, first out).&lt;/p&gt;

    &lt;p&gt;On success the character pushed is returned. On error EOF is returned.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;似乎不能在无限循环中用&lt;code class=&quot;highlighter-rouge&quot;&gt;scanf()&lt;/code&gt;的返回值决定是否跳出。因为scanf()会自动跳过空格和换行符。&lt;/p&gt;

    &lt;p&gt;gcc 4.8.4，vs2012， vc6.0 的编译器无法跳出循环，除非给一个类似&lt;code class=&quot;highlighter-rouge&quot;&gt;^+d&lt;/code&gt;的EOF输入流结束标志&lt;/p&gt;

    &lt;p&gt;但是pat的gcc 4.7.2可以跳出循环，如上那段程序可以通过所有测试用例。	某个online c complier用的是gcc 5.4.0，也可以跳出循环。是不是测试程序自动加的EOF？还是不同编译器对于C标准的实现不同？&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/31/PAT_Basic_1010.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/31/PAT_Basic_1010.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1009</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1009_%E8%AF%B4%E5%8F%8D%E8%AF%9D&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1009-1009--20&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1009&quot;&gt;原题&lt;/a&gt;： 1009. 说反话 (20)&lt;/h2&gt;

&lt;p&gt;给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;测试输入包含一个测试用例，在一行内给出总长度不超过80的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用1个空格分开，输入保证句子末尾没有多余的空格。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;每个测试用例的输出占一行，输出倒序后的句子。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello World Here I Come
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Come I Here World Hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
作者： CHEN, YUE
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-5&quot;&gt;题目分析&lt;/h1&gt;

&lt;p&gt;本题时间要求不高，可以考虑用python，配合&lt;code class=&quot;highlighter-rouge&quot;&gt;split()&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;reverse()&lt;/code&gt;，4行代码就够了。下面分析一下如何用C完成题目。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;思路&lt;/p&gt;

    &lt;p&gt;假设一共有n个空格，我们先找到结束符&lt;code class=&quot;highlighter-rouge&quot;&gt;'\0'&lt;/code&gt;（或&lt;code class=&quot;highlighter-rouge&quot;&gt;'\n'&lt;/code&gt;），将其替换为&lt;code class=&quot;highlighter-rouge&quot;&gt;'_'&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello World Here I Come_
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;再向前找到第n个空格&lt;code class=&quot;highlighter-rouge&quot;&gt;' '&lt;/code&gt;，替换为&lt;code class=&quot;highlighter-rouge&quot;&gt;'_'&lt;/code&gt;。然后以下一个&lt;code class=&quot;highlighter-rouge&quot;&gt;'_'&lt;/code&gt;为终点，这样我们就得到了最后一串字符。&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello World Here I_Come_
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;重复以上步骤。最后再输出第一串字符即可。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;获取输入&lt;/p&gt;

    &lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;fgets()&lt;/code&gt;来获取整行输入。由于总长度不超过80，我们选取&lt;code class=&quot;highlighter-rouge&quot;&gt;MAX=81&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;81&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;获取一个单词&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;起点：空格&lt;code class=&quot;highlighter-rouge&quot;&gt;' '&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;我们使用&lt;code class=&quot;highlighter-rouge&quot;&gt;strrchr()&lt;/code&gt;从后往前寻找空格。&lt;/p&gt;

        &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;strrchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;终点:下划线&lt;code class=&quot;highlighter-rouge&quot;&gt;'_'&lt;/code&gt;&lt;/p&gt;

        &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'_'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;词间空格&lt;/p&gt;

        &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;测试点&lt;/p&gt;

    &lt;p&gt;至少要对这几种情况进行测试：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;样例测试&lt;/li&gt;
      &lt;li&gt;只有一个单词，即输入的字符串无空格&lt;/li&gt;
      &lt;li&gt;字符串长度为80&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;注意：因为我们使用的是&lt;code class=&quot;highlighter-rouge&quot;&gt;fgets()&lt;/code&gt;，字符串的结尾可能是&lt;code class=&quot;highlighter-rouge&quot;&gt;'\n'&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'\0'&lt;/code&gt;，也可能是&lt;code class=&quot;highlighter-rouge&quot;&gt;'\0'&lt;/code&gt;，需要设置对应的判断条件。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;更新1—增加cpp的实现&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;思路是这样，将输入拆分成字串后，逐个压入stack栈，然后LIFO出栈直到栈为空。压入的操作是&lt;code class=&quot;highlighter-rouge&quot;&gt;.push()&lt;/code&gt;。出栈时先读顶部元素&lt;code class=&quot;highlighter-rouge&quot;&gt;.top()&lt;/code&gt;，然后&lt;code class=&quot;highlighter-rouge&quot;&gt;.pop()&lt;/code&gt;弹出栈顶，以此循环直到栈为空&lt;code class=&quot;highlighter-rouge&quot;&gt;.empty()&lt;/code&gt;。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cin&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;scanf()&lt;/code&gt;一样，如果作为退出循环的条件，本地测试时需要&lt;code class=&quot;highlighter-rouge&quot;&gt;^+d&lt;/code&gt;作为输入流的&lt;code class=&quot;highlighter-rouge&quot;&gt;EOF&lt;/code&gt;。但是OJ上会自动添加结束标志（猜测）。&lt;/p&gt;

        &lt;p&gt;我们也可先用&lt;code class=&quot;highlighter-rouge&quot;&gt;getline()&lt;/code&gt;读取整行，再转化为&lt;code class=&quot;highlighter-rouge&quot;&gt;stringstream ss&lt;/code&gt;对象，再次调用等效于split的&lt;code class=&quot;highlighter-rouge&quot;&gt;getline(ss, sub_str, ' ')&lt;/code&gt;，从而取出sub_str。代码段如下&lt;/p&gt;

        &lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sub_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stringstream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sub_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;str_stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-6&quot;&gt;部分测试用例&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
Hello World Here I Come

输出
Come I Here World Hello
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test2&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
Hello

输出
Hello
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-7&quot;&gt;其他参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www-s.acm.illinois.edu/webmonkeys/book/c_guide/2.12.html#fgets&quot;&gt;char *fgets(char *str, int n, FILE *stream);&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fgets()&lt;/code&gt;最多读取&lt;code class=&quot;highlighter-rouge&quot;&gt;MAX-1&lt;/code&gt;长度的字符串，包括作为输入确认的&lt;code class=&quot;highlighter-rouge&quot;&gt;'\n'&lt;/code&gt;。末尾会和&lt;code class=&quot;highlighter-rouge&quot;&gt;gets()&lt;/code&gt;一样，加上&lt;code class=&quot;highlighter-rouge&quot;&gt;'\0'&lt;/code&gt;。&lt;/p&gt;

    &lt;p&gt;由于输入中包含空格，而字符串总段数未知，用&lt;code class=&quot;highlighter-rouge&quot;&gt;scanf()&lt;/code&gt;会比较麻烦。&lt;/p&gt;

    &lt;p&gt;为防止内存溢出，尽量不要用&lt;code class=&quot;highlighter-rouge&quot;&gt;gets()&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www-s.acm.illinois.edu/webmonkeys/book/c_guide/2.14.html#strrchr&quot;&gt;char *strrchr(const char *str, int c);&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;strrchr()&lt;/code&gt;的原型在&lt;code class=&quot;highlighter-rouge&quot;&gt;string.h&lt;/code&gt;中声明。该函数会返回字符串s中最后一次出现字符c的地址。若没找到则返回空指针。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;—更新cpp参考—&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.cplusplus.com/faq/sequences/strings/split/&quot;&gt;how to split a string in cpp&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;注意，使用&lt;code class=&quot;highlighter-rouge&quot;&gt;istringstream&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;streamstring&lt;/code&gt;类型都需要&lt;code class=&quot;highlighter-rouge&quot;&gt;#include &amp;lt;sstream&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/30/PAT_Basic_1009.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/30/PAT_Basic_1009.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1008</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1008_%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%BE%AA%E7%8E%AF%E5%8F%B3%E7%A7%BB%E9%97%AE%E9%A2%98&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1008-1008--20&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1008&quot;&gt;原题&lt;/a&gt;： 1008. 数组元素循环右移问题 (20)&lt;/h2&gt;

&lt;p&gt;一个数组A中存有N（N&amp;gt;0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M&amp;gt;=0）个位置，即将A中的数据由（A&lt;sub&gt;0&lt;/sub&gt; A&lt;sub&gt;1&lt;/sub&gt;……A&lt;sub&gt;N-1&lt;/sub&gt;）变换为（A&lt;sub&gt;N-M&lt;/sub&gt; …… A&lt;sub&gt;N-1&lt;/sub&gt; A&lt;sub&gt;0&lt;/sub&gt; A&lt;sub&gt;1&lt;/sub&gt;……A&lt;sub&gt;N-M-1&lt;/sub&gt;）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;每个输入包含一个测试用例，第1行输入N ( 1&amp;lt;=N&amp;lt;=100)、M（M&amp;gt;=0）；第2行输入N个整数，之间用空格分隔。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;6 2
1 2 3 4 5 6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 6 1 2 3 4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-5&quot;&gt;题目分析&lt;/h1&gt;

&lt;p&gt;&lt;b&gt;注意：&lt;/b&gt; 题目中右移位数可以大于总位数。即等效移动位数是&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;方法1&lt;/p&gt;

    &lt;p&gt;使用临时变量&lt;code class=&quot;highlighter-rouge&quot;&gt;tmp&lt;/code&gt;，相邻交换，一次移动一位，移动M遍。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;方法2&lt;/p&gt;

    &lt;p&gt;变数据结构，使用循环队列，循环链表，空间换时间。其实也没有用太多空间，加了个指针而已。根据需要移动指针头，然后输出即可，数据本身不需要移动。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;方法2简化&lt;/p&gt;

    &lt;p&gt;借鉴链表的思想，改造数组，使其成为循环数组。&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;数据结构&lt;/p&gt;

        &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;初始化&lt;/p&gt;

        &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ListType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListType&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;这种做法，在已知MAXSIZE时可以快速建立一个循环链表。可以移动头指针head。兼容链表的动态扩展。可以用数组的索引。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;移位&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;左移 = M % us_N
左移 + 右移 = us_N
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;若用l_shift, r_shift分别代表左移和右移，则有&lt;/p&gt;

        &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ListType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shift_head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r_shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// int l_shift=0;
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r_shift&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// l_shift = us_shift % us_N;
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r_shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;输出&lt;/p&gt;

        &lt;p&gt;根据右移位数M，移动头指针，然后依次输出数据即可。注意行尾无空格。&lt;/p&gt;

        &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ListType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;is_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; %d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-6&quot;&gt;部分测试用例&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
6 2
1 2 3 4 5 6

输出
5 6 1 2 3 4
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-7&quot;&gt;其他参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/data%20structure/list&quot;&gt;数据结构: 链表list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/29/PAT_Basic_1008.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/29/PAT_Basic_1008.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1007</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1007_%E7%B4%A0%E6%95%B0%E5%AF%B9%E7%8C%9C%E6%83%B3&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1007-1007--20&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1007&quot;&gt;原题&lt;/a&gt;： 1007. 素数对猜想 (20)&lt;/h2&gt;

&lt;p&gt;让我们定义 d&lt;sub&gt;n&lt;/sub&gt; 为：d&lt;sub&gt;n&lt;/sub&gt; = p&lt;sub&gt;n+1&lt;/sub&gt; - p&lt;sub&gt;n&lt;/sub&gt;，其中 p&lt;sub&gt;i&lt;/sub&gt; 是第i个素数。显然有 d&lt;sub&gt;1&lt;/sub&gt;=1 且对于n&amp;gt;1有 d&lt;sub&gt;n&lt;/sub&gt; 是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。&lt;/p&gt;

&lt;p&gt;现给定任意正整数N (&amp;lt; 10&lt;sup&gt;5&lt;/sup&gt;)，请计算不超过N的满足猜想的素数对的个数。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;每个测试输入包含1个测试用例，给出正整数N。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;每个测试用例的输出占一行，不超过N的满足猜想的素数对的个数。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;20
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
作者： CHEN, Yue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-5&quot;&gt;题目分析&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;孪生素数对&lt;/p&gt;

    &lt;p&gt;题目中的素数对，指的是孪生素数对，即差为2的一对素数。结合样例，在N&amp;lt;=20的时候，有如下孪生素数对&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[3 5], [5 7], [11 13], [17 19]
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;寻找素数&lt;/p&gt;

    &lt;p&gt;请参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1013_%E6%95%B0%E7%B4%A0%E6%95%B0#题目分析&quot;&gt;1013_数素数: 题目分析&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-6&quot;&gt;部分测试用例&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
20

输出
4
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-7&quot;&gt;其他参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E5%AD%AA%E7%94%9F%E7%B4%A0%E6%95%B0&quot;&gt;维基百科：孪生素数&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.guokr.com/article/437023/&quot;&gt;果壳：孪生素数猜想—张益唐究竟做了一个什么研究？&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1013_数素数&quot;&gt;1013_数素数&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/28/PAT_Basic_1007.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/28/PAT_Basic_1007.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1006</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1006_%E6%8D%A2%E4%B8%AA%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA%E6%95%B4%E6%95%B0&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1006-1006--15&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1006&quot;&gt;原题&lt;/a&gt;： 1006. 换个格式输出整数 (15)&lt;/h2&gt;

&lt;p&gt;让我们用字母B来表示“百”、字母S表示“十”，用“12…n”来表示个位数字n（&amp;lt;10），换个格式来输出任一个不超过3位的正整数。例如234应该被输出为BBSSS1234，因为它有2个“百”、3个“十”、以及个位的4。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;每个测试输入包含1个测试用例，给出正整数n（&amp;lt;1000）。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;每个测试用例的输出占一行，用规定的格式输出n。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;234
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;BBSSS1234
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;输入样例2&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;23
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;输出样例2&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SS123
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-6&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
作者： CHEN, Yue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;section-7&quot;&gt;题目分析&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;高位为零&lt;/p&gt;

    &lt;p&gt;本题唯一的坑已经在样例中明确指出来了，也就是要高位为零的情况。（其他题目，如&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1002_%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%95%B0&quot;&gt;1002&lt;/a&gt;，就要靠自己发现这个坑了）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其余按照逻辑编写代码即可。由于本题的时间要求不高，推荐用python快速实现。&lt;/p&gt;

&lt;h1 id=&quot;section-8&quot;&gt;部分测试用例&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
234

输出
BBSSS1234
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test2&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
23

输出
SS123
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/27/PAT_Basic_1006.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/27/PAT_Basic_1006.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1005</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1005_%E7%BB%A7%E7%BB%AD(3n%2B1)%E7%8C%9C%E6%83%B3&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1005-1005-3n1-25&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1005&quot;&gt;原题&lt;/a&gt;： 1005. 继续(3n+1)猜想 (25)&lt;/h2&gt;

&lt;p&gt;卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。&lt;/p&gt;

&lt;p&gt;当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对n=3进行验证的时候，我们需要计算3、5、8、4、2、1，则当我们对n=5、8、4、2进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这4个数已经在验证3的时候遇到过了，我们称5、8、4、2是被3“覆盖”的数。我们称一个数列中的某个数n为“关键数”，如果n不能被数列中的其他数字所覆盖。&lt;/p&gt;

&lt;p&gt;现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;每个测试输入包含1个测试用例，第1行给出一个正整数K(&amp;lt;100)，第2行给出K个互不相同的待验证的正整数n(1&amp;lt;n&amp;lt;=100)的值，数字间用空格隔开。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用1个空格隔开，但一行中最后一个数字后没有空格。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;6
3 5 6 7 8 11
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;7 6
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
作者： CHEN, Yue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;题目分析&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;一种思路&lt;/p&gt;

    &lt;p&gt;抽象结构体，包含两个变量，其一是输入的数字&lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;，其二是标志符&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;，用于标明这个数是否为&lt;code class=&quot;highlighter-rouge&quot;&gt;关键数&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;将输入存为一个数组&lt;code class=&quot;highlighter-rouge&quot;&gt;num[]&lt;/code&gt;。首先假设每个数都是关键数&lt;code class=&quot;highlighter-rouge&quot;&gt;TRUE&lt;/code&gt;，&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后从第一个数开始遍历数组&lt;code class=&quot;highlighter-rouge&quot;&gt;num&lt;/code&gt;，若在&lt;code class=&quot;highlighter-rouge&quot;&gt;卡拉兹&lt;/code&gt;运算过程中，出现的数字与&lt;code class=&quot;highlighter-rouge&quot;&gt;num&lt;/code&gt;中的数字相同，则将该数字的&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;标为&lt;code class=&quot;highlighter-rouge&quot;&gt;FALSE&lt;/code&gt;。&lt;/p&gt;

    &lt;p&gt;在第一个数完成&lt;code class=&quot;highlighter-rouge&quot;&gt;卡拉兹&lt;/code&gt;过程后，对第二个数进行同样处理。但若第二个数的&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;为&lt;code class=&quot;highlighter-rouge&quot;&gt;FALSE&lt;/code&gt;，则直接跳过。因为根据定义，第二个数不是关键数。后面以此类推。&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;抽象&lt;/p&gt;

    &lt;p&gt;首先是抽象出上述结构体。&lt;/p&gt;

    &lt;p&gt;写完以后发现代码略长，因此可以试着抽象出每一个步骤，成为子函数，便于阅读与思路整理。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;打印输出&lt;/p&gt;

    &lt;p&gt;行尾不能有空格。引入标志位。第一次出现[关键数]时用&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;%d&quot;&lt;/code&gt;，并把&lt;code class=&quot;highlighter-rouge&quot;&gt;is_start&lt;/code&gt;置零。后续的[关键数]则用&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot; %d&quot;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其他&lt;/p&gt;

    &lt;p&gt;利用预定义，使逻辑更清晰&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define TRUE	1
#define FALSE	0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;更新1—增加cpp的实现&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;根据C++ Primer 4th Edition 中文版&lt;/p&gt;

        &lt;p&gt;关键字【class】和【struct】定义【类】的唯一差别在于默认访问级别。默认情况下，struct的成员为【public】，而class的成员为【private】.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;两种方式进行递减快排：利用兼容C的&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;cstdlib&amp;gt;&lt;/code&gt;之&lt;code class=&quot;highlighter-rouge&quot;&gt;qsort()&lt;/code&gt;；利用&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt;之&lt;code class=&quot;highlighter-rouge&quot;&gt;sort()&lt;/code&gt;。&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;qsort()&lt;/p&gt;

            &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;cstdlib&amp;gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp_dec_c_qsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;qsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp_dec_c_qsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;sort()&lt;/p&gt;

            &lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;algorithm&amp;gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp_dec_cpp_sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//...
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp_dec_cpp_sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
            &lt;/div&gt;

            &lt;p&gt;注意&lt;/p&gt;

            &lt;ol&gt;
              &lt;li&gt;两个&lt;code class=&quot;highlighter-rouge&quot;&gt;cmp()&lt;/code&gt;要求返回值相反。&lt;/li&gt;
              &lt;li&gt;C++的&lt;code class=&quot;highlighter-rouge&quot;&gt;cmp()&lt;/code&gt;要求传递变量的值，而C的&lt;code class=&quot;highlighter-rouge&quot;&gt;cmp()&lt;/code&gt;传入的是指针(地址)。&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sort()&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;qsort()&lt;/code&gt;的接口不同。&lt;/li&gt;
            &lt;/ol&gt;

            &lt;p&gt;第2点，有的地方会写成引用形参【&amp;amp;】的形式，但由于cmp()的不改变实参的值，所以和只传值效果相同。&lt;/p&gt;

            &lt;p&gt;以上作为&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1015_%E5%BE%B7%E6%89%8D%E8%AE%BA#题目分析&quot;&gt;1015_德才论&lt;/a&gt;
的补充。&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-6&quot;&gt;部分测试用例&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
6
3 5 6 7 8 11

输出
7 6
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-7&quot;&gt;其他参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;free()&lt;/code&gt;一个没有没有&lt;code class=&quot;highlighter-rouge&quot;&gt;malloc()&lt;/code&gt;的指针会出现 &lt;code class=&quot;highlighter-rouge&quot;&gt;Segmentation fault(core dumped)&lt;/code&gt;。小心指针的使用，指向未经授权的地点，很容易出现上述&lt;code class=&quot;highlighter-rouge&quot;&gt;段错误&lt;/code&gt;。必须确保声明了权限，也就是必须分配足够内存。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char *strcat(char * s1, const char * s2);&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;s2指向的字符串，贴到s1指向字符串的结尾，并覆盖s1所指字符串结尾的空字符。返回值是是s1。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char *strchr(const char * s, int c);&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;c对应一个字符，该函数在s所指的字符串中寻找c，并返回第一个c的地址。若找不到，则返回空指针。&lt;/p&gt;

    &lt;p&gt;用法：&lt;code class=&quot;highlighter-rouge&quot;&gt;fgets()&lt;/code&gt;会保留行尾输入的&lt;code class=&quot;highlighter-rouge&quot;&gt;'\0'&lt;/code&gt;，可以利用&lt;code class=&quot;highlighter-rouge&quot;&gt;strchr()&lt;/code&gt;将换行符去掉。&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findLF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;findLF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findLF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findLF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://faculty.euc.ac.cy/scharalambous/csc131/books/C%20book%201.pdf&quot;&gt;C Primer Plus&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;—更新cpp参考—&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.cplusplus.com/articles/NhA0RXSz/&quot;&gt;Beginners guide to the std::sort() function&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1015_%E5%BE%B7%E6%89%8D%E8%AE%BA&quot;&gt;1015_德才论&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/26/PAT_Basic_1005.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/26/PAT_Basic_1005.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1004</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1004_%E6%88%90%E7%BB%A9%E6%8E%92%E5%90%8D&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1004-1004--20&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1004&quot;&gt;原题&lt;/a&gt;： 1004. 成绩排名 (20)&lt;/h2&gt;

&lt;p&gt;读入n名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;每个测试输入包含1个测试用例，格式为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;第1行：正整数n
第2行：第1个学生的姓名 学号 成绩
第3行：第2个学生的姓名 学号 成绩
... ... ...
第n+1行：第n个学生的姓名 学号 成绩
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中姓名和学号均为不超过10个字符的字符串，成绩为0到100之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;对每个测试用例输出2行，第1行是成绩最高学生的姓名和学号，第2行是成绩最低学生的姓名和学号，字符串间有1空格。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3
Joe Math990112 89
Mike CS991301 100
Mary EE990830 95
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例：&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Mike CS991301
Joe Math990112
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
作者： CHEN, Yue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section-5&quot;&gt;题目分析&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;存储结构&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Student&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;然后申请三块这样的空间，一个是存储输入的临时变量，另外两个分别存储最高分和最低分的学生信息，每次进行比较更新即可。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;更新1—增加cpp的实现&lt;/p&gt;

    &lt;p&gt;根据C++ Primer 4th Edition 中文版:&lt;/p&gt;

    &lt;p&gt;关键字【class】和【struct】定义【类】的唯一差别在于默认访问级别。默认情况下，struct的成员为【public】，而class的成员为【private】.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-6&quot;&gt;部分测试用例:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
3
Joe Math990112 89
Mike CS991301 100
Mary EE990830 95

输出
Mike CS991301
Joe Math990112
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/25/PAT_Basic_1004.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/25/PAT_Basic_1004.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1003</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1003_%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1003-1003-20&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1003&quot;&gt;原题&lt;/a&gt;： 1003. 我要通过！(20)&lt;/h2&gt;

&lt;p&gt;“答案正确”是自动判题系统给出的最令人欢喜的回复。本题属于PAT的“答案正确”大派送 —— 只要读入的字符串满足下列条件，系统就输出“答案正确”，否则输出“答案错误”。&lt;/p&gt;

&lt;p&gt;得到“答案正确”的条件是：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 字符串中必须仅有P, A, T这三种字符，不可以包含其它字符；
2. 任意形如 xPATx 的字符串都可以获得“答案正确”，其中 x 或者是空字符串，或者是仅由字母 A 组成的字符串；
3. 如果 aPbTc 是正确的，那么 aPbATca 也是正确的，其中 a, b, c 均或者是空字符串，或者是仅由字母 A 组成的字符串。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;现在就请你为PAT写一个自动裁判程序，判定哪些字符串是可以获得“答案正确”的。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式&lt;/h3&gt;

&lt;p&gt;每个测试输入包含1个测试用例。第1行给出一个自然数n (&amp;lt;10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过100，且不包含空格。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式&lt;/h3&gt;

&lt;p&gt;每个字符串的检测结果占一行，如果该字符串可以获得“答案正确”，则输出YES，否则输出NO。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;8
PAT
PAAT
AAPATAA
AAPAATAAAA
xPATx
PT
Whatever
APAAATAA
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;YES
YES
YES
YES
NO
NO
NO
NO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
作者： CHEN, Yue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section-5&quot;&gt;题目分析&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;抽象&lt;/p&gt;

    &lt;p&gt;寻找规律。分析后可以总结出题目要求如下&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;输入只能是&lt;code class=&quot;highlighter-rouge&quot;&gt;'P'&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;'A'&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;'T'&lt;/code&gt;。其中有且仅有一个&lt;code class=&quot;highlighter-rouge&quot;&gt;'P'&lt;/code&gt;，有且仅有一个&lt;code class=&quot;highlighter-rouge&quot;&gt;'T'&lt;/code&gt;。&lt;code class=&quot;highlighter-rouge&quot;&gt;'P'&lt;/code&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;'T'&lt;/code&gt;之前。&lt;/li&gt;
      &lt;li&gt;空字符不是空格。&lt;/li&gt;
      &lt;li&gt;原题中的&lt;code class=&quot;highlighter-rouge&quot;&gt;条件2&lt;/code&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;条件3&lt;/code&gt;的基础。&lt;/li&gt;
      &lt;li&gt;由上一条可以推出
        &lt;ul&gt;
          &lt;li&gt;【 &lt;code class=&quot;highlighter-rouge&quot;&gt;'P'&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;'T'&lt;/code&gt;之间至少有一个&lt;code class=&quot;highlighter-rouge&quot;&gt;'A'&lt;/code&gt; 】&lt;/li&gt;
          &lt;li&gt;【 N&lt;sub&gt;a&lt;/sub&gt; × N&lt;sub&gt;b&lt;/sub&gt; = N&lt;sub&gt;c&lt;/sub&gt;，其中N&lt;sub&gt;x&lt;/sub&gt;是&lt;code class=&quot;highlighter-rouge&quot;&gt;'A'&lt;/code&gt;的数量 】&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;根据以上规律标准，分别编写子函数进行逻辑判断即可。由于本题的时间要求不高，可以考虑用python快速实现。&lt;/p&gt;

&lt;h1 id=&quot;section-6&quot;&gt;部分测试用例&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;输入
8
PAT
PAAT
AAPATAA
AAPAATAAAA
xPATx
PT
Whatever
APAAATAA

输出
YES
YES
YES
YES
NO
NO
NO
NO
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/24/PAT_Basic_1003.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/24/PAT_Basic_1003.html</guid>
        
        
      </item>
    
      <item>
        <title>杂想</title>
        <description>&lt;p&gt;看了曹大&lt;a href=&quot;http://weibo.com/u/1495169251?profile_ftype=1&amp;amp;is_all=1#_rnd1485230668661&quot;&gt;@caoz&lt;/a&gt; 的&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzI0MjA1Mjg2Ng==&amp;amp;mid=2649867137&amp;amp;idx=1&amp;amp;sn=957c56f79c2eb573fb558e8274e81416&amp;amp;chksm=f10759ecc670d0fa8d586e1502e979be916ddd057842b1175e5b4722da9da5d98e575eb44f7f&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0124V6oPouARDAFF0TJeinev&amp;amp;pass_ticket=0kCtOj%2B%2Bq1m6r1cKU3pvNu1Cw2m%2F35wSiFDhzvB50LQL1JHRROzYIQct%2FoB66Tuq#rd&quot;&gt;这篇文章&lt;/a&gt;，里面提到了“恰恰相反先生”，经常能在评论区看到他们的身影。暂不评判对错，但从数学的角度来看，这种现象很容易理解。&lt;/p&gt;

&lt;p&gt;数学上要证明一个命题的正确，可能需要正确的前提和精密的逻辑推理过程。但要证明一个命题错误，只要找出一个反例就好了。&lt;/p&gt;

&lt;p&gt;科学理论不是说是永恒正确的，而是在一定条件下能够描述某种现象，或者直到目前仍能很好地描述现象，直到某一天有了新的方法，新的条件下不适用了，对原来理论的改进。牛顿的经典力学在宏观条件下是成立的，可以很好地描述物理运动，但在微观条件下就体现出了局限性，相对论和量子力学可以看成是一种补充。这段文字原来可以表达地更好更精确的，但我忘记出处了。&lt;/p&gt;

&lt;p&gt;吴军博士的【文明之光】第十二章第五节中，也有这么一段描述。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;…形式科学比较特殊，它完全靠定义和公理出发，经过逻辑推理得到结论。对于一个命题正确与否，只要看前提、推理过程是否正确即可。而否定一个命题，只需要举一个反例即可。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;想要“永远正确”，那就用“专家”们的说法了，比如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;房价肯定会跌（但没说什么时候跌，跌多少，货币基准，时间基准）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;房价还要涨，股市要跌，股市要涨（同上）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;任何一只不能走的机械钟，一天还能正确报时两次呢。所以还是如曹大所说，&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI0MjA1Mjg2Ng==&amp;amp;mid=2649867127&amp;amp;idx=1&amp;amp;sn=c62e7c1015f9e73a74ff7fa63cc748e7&amp;amp;chksm=f107591ac670d00c6182e112371cd5a0e2f4d1afd4e5514e406f3ba877d8f0eef13069fe7fcc&amp;amp;scene=21#wechat_redirect&quot;&gt;好话，真话，正确的话，你想听哪个？&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section&quot;&gt;相关阅读&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ljsw.okyhm.com/archives/2318.html&quot;&gt;罗辑思维：专家不是说房价要跌吗？ – 作者：吴军&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!--为防止链接失效，原文作为注释隐藏了。仅用于备份。--&gt;

&lt;!--科学必须能够证伪
科学的结论未必是正确的

1 不谈条件，就敢谈房价
中国现在北上广三个城市的房地产总价，已经超过美国全国的70%，这个泡沫是显而易见的。但是你要问这个房价是否会大跌，我还真不敢讲，实际上讲了也没有用。

因为我们得搞清楚什么叫做大跌，对一些人来讲跌了20%就算大跌，而对另外一些人来讲，跌了50%也不在乎。

另外我们还要搞清楚在什么时间点暴跌，且不说发生在100年后我们不关心，就是10年后的事情我们也不太会关心。也正是因为如此，预言家们喜欢做10年左右的预测，而不是明年的预测，因为即便错了，你也不会被追究。
最后，大跌是以什么货币单位来衡量？比如维持房价不跌一个很简单的办法就是增发人民币，但是这样一来以美元计算房价可能还是大跌了。
从这里你可以看出如果我们谈论房价的涨和跌，要有很多限制条件，加上这些条件，才是一个科学的态度，得到的结论才是一个科学的结论。当然，科学的结论还不等于正确的结论。
 
2 专家不是说房价要跌吗？

从大约十年前开始，就有几位非常著名的经济学家讲中国的房市泡沫太大，房价要跌。

我的一位朋友听了他们的话，守着中关村的便利，却一直没敢买房，挣了一点钱都放到股市上和国库券上了。现在快到了退休的年龄，那点钱早在股市上折腾得差不多了，养老还没有着落呢。

我问过她很多次，“为什么不买房？”

她说，“专家不是说房价要跌吗？”

我说，“这个结论并不科学，你为什么会相信？”

她问我，“为什么这不是科学的结论？”

我说，“这个结论只能证实，无法证伪。科学必须要能够证伪。”
 
3 人总是要死的，房价总是要跌的

讲到这里，我们就涉及到证实和证伪的话题了。

证实比较好理解。某位专家说，“北京房价一定要大跌”，假定我们对大跌有个标准，是跌20%，如果某一天北京房价真的跌了20%，那么这位专家的结论就被证实了，因此讲这个话证实很容易。

但是，这个讲法却无法被证伪，因为今年房价没有跌不等于明年不会跌，等到了第二年房价还在涨，他又会说，价格可能会和价值偏离很长时间，但是最终会回归价值，以后总之会大跌。

这种命题的不科学性在于，即便房价过了一百年都没有大跌，你无法证明他说错了，因为只要第101年跌了他就再次正确了，这样一来这位专家就立足于不败之地了。这便是我们说的“无法证伪”，从这里面你已经看到了证伪对科学结论的重要性了。

世界上有很多貌似正确，却不能证伪的结论。比如人总是要死的，这个结论就无法证伪，因为人今天不死不等于明天还活着，即便一个人活了10000岁，这个结论依然没有被证伪。
 
4 科学结论≠正确结论

讲到这里，我又要回到今天想和你讨论的一个根本性的话题了，什么是科学，以及什么是科学的结论。关于科学的定义，很多书上都有，我就不抄书了。我只想讲讲几个常常被人们忽略的要点。

首先，科学看重的是方法和过程，而不是结论。

为什么过程和方法比结论重要呢？因为得到一个正确的结论很容易，很多事情蒙一下还有一半蒙对的可能性呢。

我常讲，任何一只不能走的机械钟，一天还能正确报时两次呢！很多人炒股，总是赔钱，偶尔挣一两次钱，就把自己当股神了，其实，不走的钟的表现可能比这些“股神”更好。因此，光有结论是不行的，需要一套方法能够不断地发展科学，才是正道。

其次，科学的结论也未必等于正确的结论。接下来我们聊聊有关科学家们对于这点的两个共识。

第一个共识是科学的结论能够成立是有条件的。回到房价这个问题上，我在信的一开始举的那个例子时说，如果给出一个关于房价的科学的结论，需要先列出来很多限制条件，这样才可以证实和证伪。

“有条件”是我们判定一个结论是否是科学的依据。在科学上，并不存在什么放之四海而皆准的真理，虽然我们经常在报纸上看到这个提法。这种说法本身就是不科学的。

科学家们对科学结论的另一个共识就是，它不等于正确的结论，反之亦然，正确的结论未必是科学的。比如亚里士多德讲，重的物体下降的速度比轻的快，这个结论显然不正确，但的的确确是科学的，因为很容易用实验证实和证伪。

既然科学的结论未必正确，既然它即便正确也是有条件的，我们就不必对它盲信了，也不必对所谓的专家盲目崇拜了。但是科学的方法和精神，却是我们每一个人都应该具备的，即使你不搞科学技术，它对我们的生活也有莫大的帮助。
 
5 信专家，还是信自己？

回到房价这件事情上，如果我们没有科学的精神，不自己开动脑筋思考，而是盲信所谓专家的结论，倒霉的是自己。

2006年，当一些经济学家们开始唱衰中国楼市时，北京中关村里面最核心地区的房价不过是1.6万元／平方米，今天已经超过了10万元，足足涨了5倍多。

假如10年后的今天，房价真的开始暴跌了，专家们可以非常自豪地向媒体宣布，自己多么具有远见，以至于10年前就预见到了今天的情况。但是，听从他们的老百姓是否真的受益呢？

未必。因为即便北京的楼市像当年东京那样跌掉70%，中关村的楼价比10年前还是翻了近一番，北京四环以内的情况都大抵如此。

我问过一些人他们为什么会迷信专家，他们给出了两个理由。

首先，这些人不愿意动脑子，而愿意接受一个结论，尤其是有专家光环的人说出的结论。

其次，他们认为专家曾经正确过，让他们感到信服。比如一些在10年前预测中国楼市崩盘的专家曾经成功地预测过东南亚金融危机。

但是，科学是要强调实验结果的可重复性，可验证性的。如果一个理论仅仅在预测东南亚金融危机时成功过一次，它还远不具备可重复性，它或许只是巧合而已。以后条件变了，地点变了，预测的结果不一样，也不奇怪。
 
6 由此得到
 
1. 科学需要能够证伪，仅仅能够证实是不够的。

2. 科学的结论未必正确，正确的结论未必科学。
--&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://pandaqr.github.io/2016/08/20/%E4%BB%80%E4%B9%88%E6%98%AF%E7%A7%91%E5%AD%A6.html&quot;&gt;qianru：什么是科学&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/25902222/&quot;&gt;文明之光&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!--为防止链接失效，原文作为注释隐藏了。仅用于备份。

...科学不仅要能被证实，而且还必须具有可证伪性，是否可以用empiricism证伪是科学与非科学的分界线。注意，这里说的可证伪性是指逻辑上留有可证伪的可能性，并不等于说一个科学的命题是假的...非科学的结论未必是错误的，只是它的结论不是通过科学的方法得到的...放之四海而皆准的命题...--&gt;

&lt;!--...为什么证伪如此重要？因为必须在逻辑上留有证伪的可能性，科学才能发展，否则就成了僵死的教条。在中世纪，教会对于《圣经》的内容就不留有证伪的空间，因此它就成为一种僵化的教条...--&gt;

&lt;!--...著名学术理论家和哲学家卡尔波普尔（Sir Karl Raimund Popper，1902—1994）喜欢用黑天鹅效应的例子说明证伪的重要性。在18世纪欧洲人在到达澳大利亚以前，并不知道世界上有黑天鹅，因此有“所有的天鹅都是白色的”一说。但是这个说法留下了证伪的可能性，因为只要找到一只黑色天鹅就能证伪，虽然这个观测在很长时间里并没有发生。波普尔认为，即使你看到的天鹅都是白色的，但是如果你是坚持科学的人，就不应该信誓旦旦地得出“所有的天鹅皆为白色”的结论。所有的科学结论都应该在理论上有被证伪的方法，才有可能导致人类科技的进步...--&gt;

&lt;!--为防止链接失效，原文作为注释隐藏了。仅用于备份。

小年夜的碎碎念

原创 2017-01-21 曹政 caoz的梦呓
想不出什么标题了，几个最近的事情的想法，其实都是旧文提到的东西，但是觉得有必要翻来说说。

关于冯大辉最新的文章“收割的群体”。

我的订阅者有些人认为我比冯大辉写东西写的好，其实很惭愧，我觉得很可能是我表现的比他更虚伪一点。 

我承认我跟冯大辉并非每个问题都意见一致，甚至在某些事情上有完全不同的观点。但另一方面，我认为我可以跟他直白的交流，而无需揣度，猜测，或者从字里行间去窥探对方的企图，这是我社交原则里非常重要的一条。

那么，今天涉及两个旧话题

1、好话，真话，正确的话，你想听哪个？

集五福这个事情，对于参与者来说。

正确的话：
每个人都有选择自己社交方式的权力，每个群体都有自己的社交偏好，没有必要用一个所谓的逼格标准去评判所有人。低端社交也是社交，过年图个喜庆，喜欢凑个热闹无可厚非。

好话：
我愿意跟朋友打个招呼换个五福你管得着么。

好了，该听真话了：

如果看到有人不断在朋友圈里换五福，我很可能会拉黑这个人。如果看到有个群里不断有换五福的信息，我很可能会退出这个群。谈谈有价值的社交 ，这篇文章有提及，如果你习惯于用这种方式进行社交，请问，在别人，特别是高价值人群眼里，你的价值标签是怎样的？

为什么要在意别人的评价？为什么要把社交弄得很功利？嗯，这样说很正确，那么，真话到此为止。

我去年说过一个观点，我说集五福这个事情，其实从运营角度，不算失败，当然，为这事还被某些大V骂，但今年，从阿里继续集五福这个事情而言，可以看出，至少他们也认为这事不算失败。

从运营角度，和从受众角度，是两个不同的视角，我希望大家理解这一点。比如自媒体，从运营角度，只要不会被封号，写出十万加就是成功。从受众角度，你天天被各种十万加垃圾信息淹没，别人说你特么的被套路了啊，你出来说，老子愿意，你管得着么。 那句话怎么说来着，不识好歹了吧。

2、怀才不遇？醒醒吧。

其实我们这种写个人公众号的，会存在一个严重的问题，就是言多必失。你说的多，分享的多，总有不周全或者看走眼的时候，如果又恰恰碰上某些“恰恰相反先生”，每个观点都给你抓俩反例，你别说，社会不是严谨的物理学，数学，所谓成功学没有什么标准是找不到反例的。

所以，很多人就会觉得，谁谁谁其实你看，不过如此么，这么简单的错误都会犯。

那么话说回来，你真以为这样你就赢了。回到上面的旧文，很多人自以为找到别人的问题就比别人强，这是非常大的认识误区。真正厉害的人，要能看到别人的优点和长处。

你说冯大辉有没有不足和缺点，有没有判断和认知上的缺陷，那肯定有。你说我有没有，我自己出来让人打脸都好多次了。 那么，一个读者如何评估呢，如果你觉得你的真实收获大于把你带入歧途的损失，那么这个就是值得继续学习的，如果反过来，就不是。那我个人觉得，我跟冯大辉还是学了不少东西的，而一些双方认知不一致的地方，我也不敢说我就是对的，还需要时间检验。

顺便说一下，如果我是投资人，我判断创业者靠谱不靠谱的标准是这样的，你们竞争对手是谁，他们优势在哪里？

竞争对手的分析很透彻，优势说的很清楚的，这个创业者靠谱，确实把行业，对手分析透了，确实知道人家怎么成功的，这时候你再讲你的优势，你看到的竞争对手的弱点，才有说服力。

竞争对手不知道是谁。（自以为没有竞争对手，常见菜鸟创业者问题），或者竞争对手在他眼里都是毛病，没有优点，（他们就是有钱，他们就是动手早，等等典型言论），说真的，这种创业者很可能要交相当多的学费才能真正认识市场和需求，甚至永远都看不到自己的问题和不足。

前段时间也有朋友说，他看网上的一些俞军的分享内容，觉得也不过如此，有些观点也不能认同，所以很奇怪我为什么推崇俞军。 那其实很多旧文我也提到了，俞军对我产品观，互联网认知的影响是非常大的，对我后续职场选择和一些重要的人生规划影响也很大，我不能说这条路一定是唯一正确的，但我认为通过跟他学习我的收获实在太大了，那么是不是他永远正确，或者从不出错，这个世界上，除了“伟大领袖”，“老大哥”之外，谁还能永远正确？！

此外，额外再说一句，刚才我说到，在网上，我比冯大辉更“虚伪”一点，其实，真话是，在现实中，我觉得有时候发表观点，极端一点，或者说不保留的那种判断，可能令人生厌，但其实往往是真的让对方更清楚明白你的观点。

比如说，这个项目，你觉得机会不大。

直白的说“别做了，没戏。”，会不会说错，总有可能还是会说错的对吧。
那么，委婉的说”解决掉那些问题，还是有机会的。“  反正你觉得对方肯定解决不掉，但怎样，人家听上去，觉得好像还是很有机会的。

力求言语正确无失的人，就经常会给你这种委婉的言论，然而接收者往往会忽略掉那些委婉的前提。


还是那句话，脱离剂量谈毒性都是耍流氓，持续精品，偶有垃圾；和持续垃圾，偶有精品；这是完全不同的概念。 在大量的垃圾里寻找价值，当然本身也不是说不对，但你的精力，你的时间毕竟是有限的。

如果用正确的话说，每个大V的内容都有精品，都有值得学习的地方。
那么问题来了，到底比例各是多少？ 

祝 大家小年快乐，新年快乐。

--&gt;

&lt;!--为防止链接失效，原文作为注释隐藏了。仅用于备份。

好话，真话，正确的话，你想听哪个？

原创 2017-01-15 曹政 caoz的梦呓
解释一下什么是正确的话，什么是好话，什么只真话。

一个毫无经验和基础的朋友准备筹划创业，来问你市场前景和机会。

讲正确是这样的：

市场空间是巨大的，只要解决好用户痛点，做好产品和服务，就一定有机会。

讲好话是这样的：

你这么聪明，又勤奋，市场空间这么巨大，你肯定行的。

讲真话是这样的：

市场空间确实巨大，但竞争多激烈，你告诉我你有什么优势，你什么优势都没有这些机会和你有毛关系，老老实实回去上班吧。

一个漂亮女生在一个不够安全的城市工作，经常加班，半夜回家。

讲正确是这样的：

我可以骚，你不能扰，女性凭什么不能半夜单身在街上走，社会应该保障和尊重女性的安全和自由出行的权力！

讲好话是这样的：

你霸气外露，流氓肯定不敢惹你的。

讲真话是这样的。

小姑娘别半夜一个人在外，不安全。

我相信读者已经能理解这里的区别。

很多大V喜欢讲正确，先立一个正确的结论，然后辅以几个可以佐证的案例，就万事大吉，至于世界上很多不正确的案例，或者不正确的事实真相，他们视而不见，也懒得深究。 

这个世界需要正确的道理，很多正确的道理本身没有问题，但也需要理解和面对更多的真实。真实的很多问题和困境，不是因为你正确就可以规避，就可以摆脱的。 

讲好话是朋友间的一种常见行为，而且就算你讲错了，别人也不会埋怨你，因为你是满满的鼓励和支持，人家怎么可以去说你讲错了。

但讲真话往往不落好。

不过可以作为一个筛选器，如果对方听不得真话，那这样的人陌路也罢。

前两天的文章

从校园霸凌到职场骚扰 果然这篇各项数据都很差。但我还想延伸说一下，关于职场骚扰和女性职场的状态。

讲正确：

低俗，侮辱人格的玩笑和活动，是企业的恶习，我们要坚决的对低俗说不，对职场骚扰说不，对性暗示和荤段子说不，要大力抵制，反抗，曝光这些坏企业，坏领导，坏同事。

讲好话：

你坚持自己的原则，坚决抵制不良风气，不要怕丢工作，一定会找到更好工作的。

讲真话：

很抱歉，真话可能不那么乐观，一个耐受度相对高一些的妹纸，在职场会更容易前进，这就是真相。

你说是不是因为大部分老板或者领导都是坏人，都很喜欢骚扰职场年轻人，真不是，即便是好老板，好上司，通常也愿意招一个耐受度高一点的小姑娘，原因很简单，省麻烦。

职场除了面对上司，老板，还要面对客户，用户，合作伙伴等等，很多场合，耐受度太低，是应付不来的，最简单的，一个游戏客服，接到愤怒的玩家电话，可能各种脏话都扑过来了。一个社区管理员，可能要经常审核一些少儿不宜的内容信息。

一个产品优化人员，在做用户行为数据调研的时候，比如分析用户搜索记录和访问日志，然后对不理解的内容做深入跟踪的时候，可能经常会误入一些不健康的网站。 比如百度招的产品人员，可能应届初入职场还是啥都不懂的小姑娘，天天看搜索行为日志，分析热词，研究用户兴趣，用不了三五年就成老司机，你说这怎么算。

所以我前几天说，适当提升耐受度，听上去不正确，但我讲的是真话。 另外，重复一下，适当提升针对的是特别敏感，特别容易自我感觉受到伤害的人群，我一直强调一个词，边界，不是说无原则的降低节操，无原则的迎合低俗，而是在一定边界内。

那么所谓耐受度的边界在哪里呢？

第一，低俗内容和攻击性言论其实与你完全无关，只是你的工作必须接触

比如内容审核，用户行为分析，这种，只要你想吃这碗饭，可能就必须要面对一些低俗和不友善的内容。如果心理承受力不足，那最好自己换岗位换行业了。

第二，低俗甚至攻击性言论并非来自于对你工作绩效有直接关联的人，并且不会构成实际的行为威胁。建议不要放在心上，尽量无视即可。

什么意思呢？比如客服（游戏客服，淘宝客服，电信客服，等等）面对用户的挑衅言论和骚扰，这是很典型场景，他说什么都影响不了你的生活，也威胁不到你。遇到这样的，建议别往心里去。

第三，低俗言论和行为目标并非针对你，只是你在场会感到尴尬。或者尽量离场，或者装傻，或者无视即可，建议不用过于放在心上。

比如商务合作上，餐桌上客户说了个荤段子，只要不是针对你说的，如果你不喜欢，别搭理就是了，如果在场觉得尴尬，可以尿遁。

第三，低俗言论曾经针对过你，但经过你的明确表态后，不再重复。

比如某同事对你搞了一个低俗玩笑，你明确告诉他这个事情不好笑，你不喜欢，他道歉后不再重犯，这样的同事我认为还是可以共事的。

女权主义者可能会觉得，我这样讲其实是纵容一些低俗无聊的行为，那回到今天的主题，你想听真话还是听正确的话。

举个栗子，我们今天假设一个小姑娘和老板，在与客户的饭局上，如果客户对她各种调戏，甚至要强迫她做一些她不愿意做的事情，这个老板站出来说，“大哥，她还小，新来的，不懂事，您别生气，我替她喝，您大人大量，别跟一个小丫头一般见识。”。  讲真，这已经是好老板了。但如果现在客户啥都没干，就是喝了点酒讲了一个荤段子，她突然高声斥责，然后拂袖而去，就职场现实而言，你觉得有几个老板敢用这样的小姑娘做商务。

不能纵容的行为包括

第一，强迫你参与你不愿意参与的低俗的活动或节目，以及你不愿意参与的事件，比如试图灌醉你。

第二，与你生活工作有密切关系的人，针对你的低俗言论或攻击性言论，在你明确表达态度后，依然不加悔改，甚至变本加利。

第三，不仅存在低俗或攻击性言论，同时存在有行为威胁。

第四，将参与低俗活动，低俗交流作为企业价值观的一部分，并成为你工作绩效成绩的一部分。这种可以认为是半强迫。

一个人喜欢低俗，真未必是坏人，听郭德纲，看日本爱情动作片，不能认为是坏人的特征吧；但如果强迫别人必须接受自己的爱好，不管这个爱好是低俗还是高雅，有一个算一个，都是流氓。 讲真话，职场上这种流氓老板还真是挺多的，大部分情况下，员工只要面子上配合一下，也都过得去，但有些老板真会认为自己员工都是铁粉，可以随意拿捏，有些坏风气也就越来越过份了。

创业，职场，很多大V给你讲正确，你看了很鼓舞，然而很多情况下，正确的往往是废话，未必能帮到你。 很多身边的朋友给你讲好话，你很感动，因为朋友一直在鼓励你。但我希望你知道，珍惜那个给你讲真话的朋友，也许你觉得他情商很低，经常在你兴冲冲的时候打击你，或者各种负能量侵扰你，但我希望你知道，正视自己，正视问题，是真话的意义和价值。


题图，是蒋彦永医生，年轻人可能都不记得这个名字，他非常了不起，了不起的地方就是，当年，在我们媒体和官员都在讲正确，讲好话的时候，只有他坚持讲真话，因为他的真话，我们最终用正确的方式的化解了一场危机。

是讲真话的人，推动着国家和社会的进步。

但必须说句公道话，并不只有中国面临这个问题，前段时间，有硅谷的朋友偷偷的说，在讲正确的硅谷，如果有人投了川普的选票，是不敢公开讲的，因为很有可能丢掉工作。

投川普正确不正确，这个事情不讨论，但如果投了川普不敢讲出来，我们知道这个问题的性质，就是只许讲正确，不许讲真话。

实际上这样的问题在灯塔国也真不少，知乎之前有个话题非常有意思，说美国的中国留学博士求职问题，有个人现身说事，说自己当年和一个学术水平差不多的黑人博士一起找一份教职工作，问导师申请成功的几率如何，导师关上门说了一句，你想听官话还是真话，（其实我们知道官话是什么，美国是一个多民族多种族国家，每个人都有通过自己努力实现梦想的权力巴拉巴拉），那当然听真话，好，真话就是，黑人兄弟很容易，而你很难。

这就是种族平权！各个高校里，黑人科学家很少，黑人博士本来就少，所以黑人博士申请教职，很多学校都愿意接受，作为种族平权的典范，而华人博士，抱歉，不要太多好伐，申请太多，竞争太激烈，当然就很难获得offer。事实果然，黑人兄弟很快就获得各个名校的offer，而他就等了很久，申了很多学校，才勉强得到一个机会。但这种差异化对待的事实，就往往被讲正确掩盖。只有在私密场合，才会有人给你讲真话。

--&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/24/nonsense.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/24/nonsense.html</guid>
        
        
      </item>
    
      <item>
        <title>PAT Basic 1002</title>
        <description>&lt;p&gt;本题代码可以参考&lt;a href=&quot;https://github.com/jJayyyyyyy/cs/tree/master/OJ/PAT/basic_level/1002_%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%95%B0&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;httpswwwpatestcncontestspat-b-practise1002-1002--20&quot;&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-b-practise/1002&quot;&gt;原题&lt;/a&gt;： 1002. 写出这个数 (20)&lt;/h2&gt;

&lt;p&gt;读入一个自然数n，计算其各位数字之和，用汉语拼音写出和的每一位数字。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;输入格式：&lt;/h3&gt;

&lt;p&gt;每个测试输入包含1个测试用例，即给出自然数n的值。这里保证n小于10&lt;sup&gt;100&lt;/sup&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;输出格式：&lt;/h3&gt;

&lt;p&gt;在一行内输出n的各位数字之和的每一位，拼音数字间有1 空格，但一行中最后一个拼音数字后没有空格。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;输入样例：&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1234567890987654321123456789
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;输出样例：&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yi san wu
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;时间限制： 400 ms
内存限制： 65536 kB
代码长度限制： 8000 B
判题程序： Standard
作者： CHEN, Yue
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;section-5&quot;&gt;题目分析&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;输入&lt;/p&gt;

    &lt;p&gt;输入视作字符串，而不是整数&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;因为输入上限是10^100，所以字符串长度最大为100&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;将每个字符转化为数字，求和得到sigma&lt;br /&gt;
由于字符串长度最大为100，每一位最大数字是9，可得sigma最大为9×100=900&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;输出&lt;/p&gt;

    &lt;p&gt;建立一个字符串数组&lt;code class=&quot;highlighter-rouge&quot;&gt;num_pinyin&lt;/code&gt;，每个元素是0~9的拼音&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ling&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;er&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;san&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;si&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;wu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;liu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;qi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ba&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;jiu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;普通解法&lt;/p&gt;

    &lt;p&gt;输入求和得到sigma&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'\0'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;获取sigma各数位的数字&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;p_hundreds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_hundreds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p_tens&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_tens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p_units&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;输出逻辑&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;a. 从高到低，&lt;/li&gt;
      &lt;li&gt;b. 高位非零，低位全打&lt;/li&gt;
      &lt;li&gt;c. 高位为零，内嵌if，下一位作为高位，回到b&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_hundreds&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s %s %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_hundreds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_tens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_units&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_tens&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_tens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_units&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_units&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;b&gt;高阶写法&lt;/b&gt;&lt;/p&gt;

    &lt;p&gt;参考&lt;a href=&quot;https://www.nowcoder.com/profile/243727/codeBookDetail?submissionId=3313687&quot;&gt;这里&lt;/a&gt;，如果掌握了&lt;code class=&quot;highlighter-rouge&quot;&gt;int(), str(), map(), sum()&lt;/code&gt;，则可以用python写出更&lt;b&gt;精妙&lt;/b&gt;的代码：&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ling'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'yi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'er'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'san'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'si'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'liu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'qi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ba'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'jiu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;raw_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;只有10行左右，而且逻辑清晰。我们也可以参考这个思路，改写C的代码。对应&lt;code class=&quot;highlighter-rouge&quot;&gt;sigma = str(sigma)&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;对应后两行，则有&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'\0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_pinyin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;更新1—增加cpp的实现&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;时间效率略逊于C，但是属于同一数量级，应该说是几乎相同。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;string类&lt;/code&gt;代替&lt;code class=&quot;highlighter-rouge&quot;&gt;char数组&lt;/code&gt;，以保存字符串。会根据需要自动分配内存空间，不需要手动申请最大空间。自带多种操作方法，如&lt;code class=&quot;highlighter-rouge&quot;&gt;.size()&lt;/code&gt;等。注意&lt;code class=&quot;highlighter-rouge&quot;&gt;string类&lt;/code&gt;不是以&lt;code class=&quot;highlighter-rouge&quot;&gt;'\0'&lt;/code&gt;结尾，用长度&lt;code class=&quot;highlighter-rouge&quot;&gt;.size()&lt;/code&gt;判断结尾。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stringstream&lt;/code&gt;代替&lt;code class=&quot;highlighter-rouge&quot;&gt;sprintf()&lt;/code&gt;，将数字转变成字符串&lt;/p&gt;

        &lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;sstream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stringstream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;附加两个将字符串变成数字的方法。第一个需要在编译的时候加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;-std=c++11&lt;/code&gt;&lt;/p&gt;

        &lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stoi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;第二个则仍是利用&lt;code class=&quot;highlighter-rouge&quot;&gt;sstream&lt;/code&gt;库&lt;/p&gt;

        &lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;sstream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string2num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stringstream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// stringstream ss(us_str);
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;section-6&quot;&gt;部分测试用例:&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;test1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;测试用例
1234567890987654321123456789

输出
yi san wu
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test2&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;测试用例:
1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890

输出:
si wu ling
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;test3&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;测试用例：
999999999999

输出：
yi ling ba
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-7&quot;&gt;参考&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.nowcoder.com/profile/243727/codeBookDetail?submissionId=3313687&quot;&gt;Yaicky提交的代码&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www-s.acm.illinois.edu/webmonkeys/book/c_guide/?&quot;&gt;The C Library Reference Guide&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;字符串数组的声明与初始化&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;获取字符串输入&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;				&lt;span class=&quot;c1&quot;&gt;//可能溢出
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//会保存作为输入确认的'\n'
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;//遇到空格结束
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;python中字符串可以用单引号&lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt;，也可以用双引号&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;。&lt;/p&gt;

    &lt;p&gt;用惯了python，就容易忘记C的语法要求。。C中单引号只能包裹字符，双引号包裹的是字符串。字符串是以空字符&lt;code class=&quot;highlighter-rouge&quot;&gt;'\0'&lt;/code&gt;结尾的&lt;code class=&quot;highlighter-rouge&quot;&gt;char数组&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sprintf()&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;stdio.h&lt;/code&gt;中声明。原型为&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;不同于&lt;code class=&quot;highlighter-rouge&quot;&gt;printf()&lt;/code&gt;的打印输出，它的作用是将内容保存为字符串，类似于python中的&lt;code class=&quot;highlighter-rouge&quot;&gt;str()&lt;/code&gt;函数，比如&lt;/p&gt;

    &lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;us_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;则&lt;code class=&quot;highlighter-rouge&quot;&gt;us_num&lt;/code&gt;的内容就变成了”12345”。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;—更新cpp参考—&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/string/stoi/&quot;&gt;cplusplus.com, std::stoi&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/11751486/qt-c-aggregate-stdstringstream-ss-has-incomplete-type-and-cannot-be-define&quot;&gt;Stack Overflow, num2string using sstream&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.cplusplus.com/forum/articles/9645/&quot;&gt;cplusplus.com, Converting numbers to strings and strings to numbers&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(END)&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Jan 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/01/22/PAT_Basic_1002.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/22/PAT_Basic_1002.html</guid>
        
        
      </item>
    
  </channel>
</rss>
